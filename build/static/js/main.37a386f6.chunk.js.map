{"version":3,"sources":["MDQ_Logo_Text_White.png","views/Dashboard.js","utils/dataBasePort.js","Api/AdanTime.js","utils/auth.js","components/Main/AddDailyAdan.js","components/Main/DailyData.js","views/UpdateDailyAdan.js","components/Main/AddJummah.js","Api/jummah.js","components/Main/JummaData.js","views/JummahData.js","components/Main/addRamadan.js","Api/Ramadan.js","components/Main/RamadanData.js","views/Ramadan.js","Api/Announcement.js","Api/Event.js","components/Main/AnnounceUpdate.js","components/Main/AnnouncementData.js","components/Main/eventUpdate.js","components/Main/EventData.js","Api/Banner.js","components/Main/BannerData.js","routes.js","views/Announcement.js","views/event.js","views/Banner.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","assets/img/reactlogo.png","components/Sidebar/Sidebar.js","assets/img/sidebar-3.jpg","assets/img/sidebar-1.jpg","assets/img/sidebar-2.jpg","assets/img/sidebar-4.jpg","layouts/Admin.js","views/Login.js","Api/auth.js","layouts/RegistrationForm.js","layouts/Registration.js","App.js","index.js"],"names":["Dashboard","Container","fluid","Card","Body","className","port","addAdans","addAdan","token","JSON","parse","localStorage","getItem","console","log","axios","post","headers","authenticate","cb","window","setItem","stringify","isAuthenticated","exp","jwt_decode","Date","getTime","removeItem","initialstate","user","jwt_Token_decoded","Jwt_Decode","now","clear","AuthContext","createContext","login","userData","logout","AuthReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","AddDailyAdan","useState","success","values","englishDay","englishMonth","englishYear","timing","adanTime","setAdanTime","level","startTime","endTime","inputList","setInputList","handleInputChange","e","index","target","name","list","handleAddClick","handleChange","files","handleSubmit","preventDefault","then","response","setOpen","data","catch","err","React","open","handleClose","event","reason","showSuccess","Alert","variant","Snackbar","autoHideDuration","onClose","severity","sx","width","Form","onSubmit","Row","Col","Group","controlId","Label","Control","as","defaultValue","onChange","DayData","map","day","MonthData","YearData","year","x","i","AdanData","label","TextField","InputLabelProps","shrink","inputProps","step","length","Button","onClick","splice","handleRemoveClick","DailyData","allData","arabDay","arabMonth","arabYear","prayer","useEffect","id","delete","deleteAdans","_id","res","addProduct","put","updateProductss","UpdateDailyAdan","show","setShow","Modal","size","onHide","Header","closeButton","Title","Footer","id1","id2","id3","get","getOneAdan","AddJummah","setValues","khutba","imam","addJummah","addJummahs","placeholder","JummahDatas","deleteJummah","updateJummah","JummahData","getOneJummah","AddRamadan","shehriIn","shehriOut","Iftar","addRamadan","RamadanData","deleteRamadan","updateRamadan","Ramadan","getOneRamadan","updateAnnouncement","deleteAnnouncement","updateEvent","deleteEvent","AnnounceUpdate","useForm","shouldUseNativeValidation","register","defaultData","setDefaultData","setSuccess","findOneAnnouncement","a","image","setImage","eventImage","FormData","eventName","eventDate","time","eventTime","eventBody","src","alt","updateAnnouncementImage","r","AnnouncementData","events","setUser","loadUsers","result","reverse","deleteUser","announcement","setAnnouncement","updateUser","Table","striped","bordered","hover","eventUpdate","datas","findOneEvent","EventData","handleShow","deleteBanner","BannerData","banners","bannerImage","dashboardRoutes","path","icon","component","layout","formData","set","location","reload","rows","addEvent","useHistory","addBanner","addBanners","useLocation","Navbar","bg","expand","document","documentElement","classList","toggle","node","createElement","onclick","this","parentElement","removeChild","body","appendChild","Brand","href","routes","pathname","indexOf","getBrandText","Toggle","Collapse","Nav","navbar","Item","Link","to","Component","Sidebar","color","style","backgroundImage","require","default","prop","key","redirect","upgrade","routeName","activeClassName","Admin","sidebarImage","hasImage","mainPanel","useRef","scrollTop","scrollingElement","current","innerWidth","element","getElementById","parentNode","ref","AdminNavbar","render","Login","email","password","method","class","required","autofocus","autoComplete","createTheme","App","ReactDOM"],"mappings":"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","file":"static/js/main.37a386f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MDQ_Logo_Text_White.7a19b7d1.png\";","import React from \"react\";\n// react-bootstrap components\nimport {\n  Card,\n  Container,\n} from \"react-bootstrap\";\n\nfunction Dashboard() {\n  return (\n    <>\n      <Container fluid>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mt-lg-5\">\n              Welcome To Dashboard\n            </h2>\n\n          </Card.Body>\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default Dashboard;\n","//export const port ='http://localhost:8989'\r\nexport const port ='http://18.217.131.163:8989'","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addAdans = (addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    console.log(\"ok\")\r\n    return axios.post(`${port}/adan/oneMonth/`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const updateAdans = (id, addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/adan/oneMonth/${id}`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\n\r\nexport const getOneAdan = (id1, id2, id3) => {\r\n    console.log(id1)\r\n    return axios.get(\r\n        `${port}/adan/oneDay/?englishMonth=${id2}&englishYear=${id3}&englishDay=${id1}`\r\n    );\r\n};\r\n\r\n\r\nexport const deleteAdans= (id) => {\r\n    console.log(id)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete (`${port}/adan/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const updateProductss = (id, addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    console.log(addProduct)\r\n    return axios.put(`${port}/adan/${id}`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\n// export const deleteOneProducts = (id) => {\r\n//     console.log(id)\r\n//     const token = JSON.parse(localStorage.getItem('jwt'))\r\n//     return axios.delete(\r\n//         `http://18.217.131.163:8989/admin/product/${id}`, {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Authorization': `Bearer ${token}`\r\n//             }\r\n//         }\r\n//     );\r\n// };","import jwt_decode from 'jwt-decode';\r\nimport {createContext, useReducer} from \"react\"\r\n\r\nexport const authenticate = (token, cb) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(token));\r\n        cb();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window === 'undefined') return false;\r\n    if (localStorage.getItem('jwt')) {\r\n        const { exp } = jwt_decode(JSON.parse(localStorage.getItem('jwt')));\r\n        if((new Date()).getTime() < exp * 1000){\r\n            return true;\r\n        }else{\r\n            localStorage.removeItem('jwt');\r\n            return false\r\n        }\r\n\r\n    } else return false;\r\n}\r\n\r\nexport const userInfo = () => {\r\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\r\n    const decoded = jwt_decode(jwt);\r\n    return { ...decoded, token: jwt }\r\n}\r\n\r\n\r\nconst initialstate = {\r\n    user: null,\r\n};\r\nif (localStorage.getItem(\"JWT_Token\")) {\r\n    const jwt_Token_decoded = Jwt_Decode(localStorage.getItem(\"JWT_Token\"));\r\n    console.log(jwt_Token_decoded.exp * 1000);\r\n    console.log(Date.now());\r\n    if (jwt_Token_decoded.exp * 1000 < Date.now()) {\r\n        localStorage.clear(); // this runs only when I refresh the page or reload on route change it dosent work\r\n    } else {\r\n        initialstate.user = jwt_Token_decoded;\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userData) => {},\r\n    logout: () => {},\r\n});\r\nconst AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const AuthProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, initialstate);\r\n    const login = (userData) => {\r\n        localStorage.setItem(\"JWT_Token\", userData.token);\r\n        dispatch({\r\n            type: \"LOGIN\",\r\n            payload: userData,\r\n        });\r\n    };\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        dispatch({ action: \"LOGOUT\" });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ user: state.user, login, logout }}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport {AuthContext};","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown} from \"react-bootstrap\";\r\nimport DayData from '../../data/dayData.json'\r\nimport MonthData from \"../../data/month.json\"\r\nimport YearData from \"../../data/yearData.json\"\r\nimport AdanData from \"../../data/adanData.json\"\r\nimport {addAdans} from \"../../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {Snackbar, TextField, Alert} from \"@mui/material\";\r\n// import TimePicker from 'react-bootstrap-time-picker';\r\nconst AddDailyAdan = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const {success} = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        timing: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, timing\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        level: \"\",\r\n        startTime: \"\",\r\n        endTime: ''\r\n    }]);\r\n\r\n    const {level, startTime, endTime} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        console.log(\"hello\",name, value)\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    console.log(inputList)\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \" \",\r\n            startTime: \" \",\r\n            endTime: \" \"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addAdans({englishDay, englishMonth, englishYear, timing, level, startTime, endTime})\r\n            .then(response => {\r\n                // setValues({\r\n                //     success: true,\r\n                // })\r\n                setOpen(true);\r\n                isAuthenticated(response.data.token, () => {\r\n                    setAdanTime({\r\n                        englishDay: '',\r\n                        englishMonth: '',\r\n                        englishYear: \"\",\r\n                        timing: inputList,\r\n                        level: \"\",\r\n                        startTime: \"\",\r\n                        endTime: \"\",\r\n                        success: true,\r\n                    })\r\n                    setValues({\r\n                        success: true,\r\n                    })\r\n                    console.log(values)\r\n                    showSuccess()\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const addNewAdan = () => (\r\n        <Container fluid>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    This is a success message!\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\" aria-label=\"Default select example\"\r\n                                                  defaultValue=\"State...\"\r\n                                                  name=\"level\" value={level} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Label>Adan time</Form.Label>\r\n                                <TextField\r\n                                    label=\"Pick time\"\r\n                                    type=\"time\"\r\n                                    defaultValue=\"07:30\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 60, // 5 min\r\n                                    }}\r\n                                    sx={{ width: 150 }}\r\n                                    name='startTime'\r\n                                    value={startTime}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n\r\n                                />\r\n                                {/*<Form.Group className=\"mb-3\" controlId=\"addCategory\">*/}\r\n                                {/*    <Form.Label>Adan time</Form.Label>*/}\r\n                                {/*    <Form.Control type=\"option\" name=\"startTime\" placeholder=\"Start time\"*/}\r\n                                {/*                  value={startTime} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                {/*</Form.Group>*/}\r\n                                {/*<Form.Group className=\"mb-3\" controlId=\"addCategory\">*/}\r\n                                {/*    <Form.Control as=\"select\" aria-label=\"Default select example\"*/}\r\n                                {/*                  defaultValue=\"State...\"*/}\r\n                                {/*                  name=\"level\" value={level} onChange={e => handleInputChange(e, i)}>*/}\r\n                                {/*        <option>am/pm</option>*/}\r\n                                {/*        <option className=\"text-black\">am</option>*/}\r\n                                {/*        <option className=\"text-black\">pm</option>*/}\r\n                                {/*    </Form.Control>*/}\r\n                                {/*</Form.Group>*/}\r\n                            </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Iqamah time</Form.Label>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        defaultValue=\"07:30\"\r\n                                        name='endTime'\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{ width: 150 }}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        value={endTime}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new prayer\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    )\r\n\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (\r\n\r\n            <>\r\n                <Alert variant='success'>\r\n                    Announcement successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewAdan()}\r\n        </div>\r\n    )\r\n}\r\nexport default AddDailyAdan","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport AdanData from \"../../data/adanData.json\";\r\nimport DayData from \"../../data/dayData.json\";\r\nimport MonthData from \"../../data/month.json\";\r\nimport YearData from \"../../data/yearData.json\";\r\nimport {deleteAdans, updateProductss} from \"../../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {Alert, Snackbar, TextField} from \"@mui/material\";\r\n\r\nconst DailyData = (allData) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const data = allData.data\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        arabDay: '',\r\n        arabMonth: '',\r\n        arabYear: \"\",\r\n        timing: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n    const [inputList, setInputList] = useState([{\r\n        level: \"\",\r\n        startTime: \"\",\r\n        endTime: \"\"\r\n    }]);\r\n\r\n    const {level, startTime, endTime} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \"\",\r\n            startTime: \"\",\r\n            endTime: \"\"\r\n        }])\r\n    };\r\n\r\n    useEffect(() => {\r\n        setAdanTime(data)\r\n        const timing = data.timing\r\n        setInputList(timing)\r\n        console.log(timing)\r\n        // timing && timing.map((data)=>{\r\n        //     setInputList(data)\r\n        // })\r\n    })\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    console.log(data)\r\n\r\n    function updateChange(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        console.log(id)\r\n        updateProductss(id, adanTime).then(res => {\r\n            isAuthenticated(res.data.token, () => {\r\n                setAdanTime({\r\n                    englishDay: '',\r\n                    englishMonth: '',\r\n                    englishYear: \"\",\r\n                    arabDay: '',\r\n                    arabMonth: '',\r\n                    arabYear: \"\",\r\n                    timing: [],\r\n                })\r\n\r\n                setValues({\r\n                    success: true,\r\n                })\r\n            })\r\n            setOpen(true)\r\n        } ).catch(err => console.log(err))\r\n    }\r\n\r\n    function deleteAdan(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        deleteAdans(id).then(res => {\r\n            isAuthenticated(res.data.token)\r\n            setOpen(true);\r\n        }).catch(err => console.log(err))\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Operation done successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\"\r\n                                                  defaultValue={x.level}\r\n                                                  name=\"level\" value={level} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Adan time</Form.Label>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{ width: 150 }}\r\n                                        name='startTime'\r\n                                        value={startTime}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        defaultValue={x.startTime}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/*<Form.Control type=\"option\" name=\"startTime\" placeholder={startTime}*/}\r\n                                {/*              defaultValue={x.startTime}*/}\r\n                                {/*              value={startTime} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Iqamah time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            name='endTime'\r\n                                            value={endTime}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            defaultValue={x.endTime}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/*<Form.Control type=\"price\" name=\"endTime\" placeholder=\"End time\"*/}\r\n                                    {/*              defaultValue={x.endTime}*/}\r\n                                    {/*              value={endTime} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n                <div className='d-flex justify-content-around'>\r\n\r\n                    <div>\r\n                        <Button variant=\"outline-primary\" onClick={deleteAdan}>Delete</Button>\r\n                    </div>\r\n                    <di>\r\n                        <Button variant=\"outline-primary\" onClick={updateChange}>Update</Button>\r\n                    </di>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DailyData","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Button, Card, Row, Col, Form, Modal} from \"react-bootstrap\";\r\nimport AddDailyAdan from \"../components/Main/AddDailyAdan\";\r\nimport DayData from '../data/dayData.json'\r\nimport MonthData from \"../data/month.json\"\r\nimport YearData from \"../data/yearData.json\"\r\nimport {addAdans, getOneAdan} from \"../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../utils/auth\";\r\n\r\nimport DailyData from \"../components/Main/DailyData\";\r\n\r\n\r\nconst UpdateDailyAdan = () => {\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        timing: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, timing\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        level: \"level\",\r\n        startTime: \"time\",\r\n        endTime: \"time\"\r\n    }]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const {level, startTime, endTime} = inputList;\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \"level\",\r\n            startTime: \"time\",\r\n            endTime: \"time\"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addAdans({englishDay, englishMonth, englishYear, timing, level, startTime, endTime})\r\n            .then(response => {\r\n                isAuthenticated(response.data.token, () => {\r\n                    setAdanTime({\r\n                        englishDay: '',\r\n                        englishMonth: '',\r\n                        englishYear: \"\",\r\n                        timing: inputList,\r\n                        level: \"\",\r\n                        startTime: \"\",\r\n                        endTime: \"\",\r\n                        success: true,\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    function search() {\r\n\r\n        const id1 = englishDay\r\n        const id2 = englishMonth\r\n        const id3 = englishYear\r\n        if (id1, id2, id3) {\r\n            getOneAdan(id1, id2, id3).then(res => {\r\n\r\n                try {\r\n                 const allData = res.data[0]\r\n                    const timing = allData.timing\r\n                    setAdanTime(allData)\r\n                    setInputList(timing)\r\n                    console.log(adanTime)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" className=\"mb-4\" onClick={handleShow}>\r\n                Add Daily Adan\r\n            </Button>\r\n\r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddDailyAdan/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Label className=\"text-center\">Update Adan</Form.Label>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"primary\" className=\"mb-4\" onClick={search}>\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n            <DailyData data={adanTime}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateDailyAdan","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, Alert} from \"react-bootstrap\";\r\nimport DayData from '../../data/dayData.json'\r\nimport MonthData from \"../../data/month.json\"\r\nimport YearData from \"../../data/yearData.json\"\r\nimport AdanData from \"../../data/jummah.json\"\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {addJummahs} from \"../../Api/jummah\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nconst AddJummah = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        label: \"level\",\r\n        khutba: \"time\",\r\n        imam: \"name\"\r\n    }]);\r\n\r\n    const {label, khutba, imam} = inputList;\r\n\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            prayer: inputList\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addJummahs({ englishDay, englishMonth, englishYear, prayer, label, khutba, imam})\r\n            .then(response => {\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                isAuthenticated(response.data.token, () => {\r\n                    setAdanTime({englishDay: '',\r\n                        englishMonth: '',\r\n                        englishYear: \"\",\r\n                        prayer: inputList,\r\n                        success: true,\r\n                        label: \"\",\r\n                        khutba: \"\",\r\n                        imam: \"\"\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    const addNewPrayer = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\" aria-label=\"Default select example\"\r\n                                                  defaultValue=\"State...\"\r\n                                                  name=\"label\" value={label} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Khutba Time</Form.Label>\r\n                                <TextField\r\n                                    label=\"Pick time\"\r\n                                    type=\"time\"\r\n                                    defaultValue=\"07:30\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 60, // 5 min\r\n                                    }}\r\n                                    sx={{ width: 150 }}\r\n                                    name='khutba'\r\n                                    value={khutba}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n\r\n                                />\r\n                                {/*<Form.Control type=\"option\" name=\"khutba\" placeholder=\"Start time\"*/}\r\n                                {/*              value={khutba} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Imam</Form.Label>\r\n                                    <Form.Control type=\"Name\" name=\"imam\" placeholder=\"End time\"\r\n                                                  value={imam} onChange={e => handleInputChange(e, i)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            {/*<Col className=\"mt-4\">*/}\r\n                            {/*    {inputList.length !== 1 && <Button*/}\r\n                            {/*        className=\"mr10\"*/}\r\n                            {/*        onClick={() => handleRemoveClick(i)}>Remove</Button>}*/}\r\n                            {/*    {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}*/}\r\n                            {/*</Col>*/}\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new prayer\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    )\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (\r\n\r\n            <>\r\n                <Alert variant='success'>\r\n                    Announcement successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewPrayer()}\r\n        </div>\r\n    )\r\n}\r\nexport default AddJummah","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addJummahs = (addJummah) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/jummah/`, addJummah, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const getOneJummah = (id1, id2, id3) => {\r\n    console.log(id1)\r\n    return axios.get(\r\n        `${port}/jummah/?englishMonth=${id2}&englishYear=${id3}&englishDay=${id1}`\r\n    );\r\n};\r\nexport const updateJummah = (id, addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/jummah/${id}`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const deleteJummah= (id) => {\r\n    console.log(id)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/jummah/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport AdanData from \"../../data/adanData.json\";\r\nimport DayData from \"../../data/dayData.json\";\r\nimport MonthData from \"../../data/month.json\";\r\nimport YearData from \"../../data/yearData.json\";\r\nimport {deleteAdans, updateProductss} from \"../../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {deleteJummah, getOneJummah, updateJummah} from \"../../Api/jummah\";\r\nimport {Alert, Snackbar, TextField} from \"@mui/material\";\r\n\r\nconst JummahDatas = (allData) => {\r\n    const data = allData.data\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        arabDay: '',\r\n        arabMonth: '',\r\n        arabYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n    const [inputList, setInputList] = useState([{\r\n        label: \"\",\r\n        khutba: \"\",\r\n        imam: \"\"\r\n    }]);\r\n\r\n    const {label, khutba, imam} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n    //\r\n    // const handleRemoveClick = index => {\r\n    //     const list = [...inputList];\r\n    //     list.splice(index, 1);\r\n    //     setInputList(list);\r\n    // };\r\n    //\r\n    // const handleAddClick = () => {\r\n    //     setInputList([...inputList, {\r\n    //         label: \"\",\r\n    //         khutba: \"\",\r\n    //         imam: \"\"\r\n    //     }])\r\n    // };\r\n\r\n    useEffect(() => {\r\n        setAdanTime(data)\r\n        const prayer = data.prayer\r\n        setInputList(prayer)\r\n        console.log(prayer)\r\n    })\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    // const handleClick = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    // console.log(data)\r\n\r\n    function updateChange(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        console.log(id)\r\n        updateJummah(id, adanTime).then(res => {\r\n            isAuthenticated(res.data.token, () => {\r\n                setAdanTime({\r\n                    englishDay: '',\r\n                    englishMonth: '',\r\n                    englishYear: \"\",\r\n                    arabDay: '',\r\n                    arabMonth: '',\r\n                    arabYear: \"\",\r\n                    prayer: [],\r\n                })\r\n            })\r\n            setOpen(true);\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    function deleteAdan(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        deleteJummah(id).then(res => {\r\n            isAuthenticated(res.data.token)\r\n            setOpen(true);\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Operation done successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\"\r\n                                                  defaultValue={x.label}\r\n                                                  name=\"label\" value={label} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Khutba Time</Form.Label>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{ width: 150 }}\r\n                                        name='khutba'\r\n                                        value={khutba}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        defaultValue={x.khutba}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/*<Form.Control type=\"option\" name=\"khutba\" placeholder={khutba}*/}\r\n                                {/*              defaultValue={x.khutba}*/}\r\n                                {/*              value={khutba} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Imam Name</Form.Label>\r\n                                    <Form.Control type=\"price\" name=\"imam\" placeholder=\"End time\"\r\n                                                  defaultValue={x.imam}\r\n                                                  value={imam} onChange={e => handleInputChange(e, i)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            {/*<Col className=\"mt-4\">*/}\r\n                            {/*    {inputList.length !== 1 && <Button*/}\r\n                            {/*        className=\"mr10\"*/}\r\n                            {/*        onClick={() => handleRemoveClick(i)}>Remove</Button>}*/}\r\n                            {/*    {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}*/}\r\n                            {/*</Col>*/}\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n                <div className='d-flex justify-content-around'>\r\n\r\n                    <div>\r\n                        <Button variant=\"outline-primary\" onClick={deleteAdan}>Delete</Button>\r\n                    </div>\r\n                    <di>\r\n                        <Button variant=\"outline-primary\" onClick={updateChange}>Update</Button>\r\n                    </di>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JummahDatas","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Card, Row, Col, Form, Modal} from \"react-bootstrap\";\r\nimport DayData from '../data/dayData.json'\r\nimport MonthData from \"../data/month.json\"\r\nimport YearData from \"../data/yearData.json\"\r\nimport AdanData from \"../data/adanData.json\"\r\nimport {isAuthenticated} from \"../utils/auth\";\r\nimport AddJummah from \"../components/Main/AddJummah\";\r\nimport {getOneJummah} from \"../Api/jummah\";\r\nimport {addAdans, getOneAdan} from \"../Api/AdanTime\";\r\nimport JummahDatas from \"../components/Main/JummaData\";\r\nimport \"./product.css\"\r\n\r\n\r\nconst JummahData = () => {\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        label: \"level\",\r\n        khutba: \"time\",\r\n        imam: \"time\"\r\n    }]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const {label, khutba, imam} = inputList;\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            prayer: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \"level\",\r\n            startTime: \"time\",\r\n            endTime: \"time\"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function search() {\r\n\r\n        const id1 = englishDay\r\n        const id2 = englishMonth\r\n        const id3 = englishYear\r\n        if (id1, id2, id3) {\r\n            getOneJummah(id1, id2, id3).then(res => {\r\n\r\n                try {\r\n                    const allData = res.data[0]\r\n                    const prayer = allData.prayer[0]\r\n                    setAdanTime(allData)\r\n                    setInputList(prayer)\r\n                    console.log(adanTime)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" className=\"mb-4\" onClick={handleShow}>\r\n                Add Prayer\r\n            </Button>\r\n\r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddJummah/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Form\r\n                // onSubmit={handleSubmit}\r\n            >\r\n                <Form.Label className=\"text-center\">Update Adan</Form.Label>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"primary\" className=\"mb-4\" onClick={search}>\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n            <JummahDatas data={adanTime}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JummahData","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, } from \"react-bootstrap\";\r\nimport DayData from '../../data/dayData.json'\r\nimport MonthData from \"../../data/month.json\"\r\nimport YearData from \"../../data/yearData.json\"\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {addRamadan} from \"../../Api/Ramadan\";\r\nimport {Snackbar, Alert,TextField} from \"@mui/material\";\r\n\r\nconst AddRamadan = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        shehriIn: \"level\",\r\n        shehriOut:\"time\",\r\n        Iftar: \"name\"\r\n    }]);\r\n\r\n    const {shehriIn, shehriOut, Iftar} = inputList;\r\n\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            prayer: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            shehriIn: \"level\",\r\n            shehriOut:\"time\",\r\n            Iftar: \"name\"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addRamadan({ englishDay, englishMonth, englishYear, prayer, shehriIn, shehriOut, Iftar})\r\n            .then(response => {\r\n                // setValues({\r\n                //     success: true,\r\n                // })\r\n                setOpen(true);\r\n                isAuthenticated(response.data.token, () => {\r\n                    setAdanTime({englishDay: '',\r\n                        englishMonth: '',\r\n                        englishYear: \"\",\r\n                        prayer: inputList,\r\n                        success: true,\r\n                        shehriIn: \"\",\r\n                        shehriOut:\"\",\r\n                        Iftar: \"\"\r\n                    })\r\n\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const addNewRamadan = () => (\r\n        <Container fluid>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    This is a success message!\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Sehri Start</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue=\"03:30\"\r\n                                            name='shehriIn'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={shehriIn}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"option\" name=\"shehriIn\" placeholder=\"Start time\"*/}\r\n                                    {/*              value={shehriIn} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Sehri End</Form.Label>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        defaultValue=\"03:30\"\r\n                                        name='shehriOut'\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{ width: 150 }}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        value={shehriOut}\r\n                                    />\r\n                                </div>\r\n                                {/*<Form.Control type=\"option\" name=\"shehriOut\" placeholder=\"Start time\"*/}\r\n                                {/*              value={shehriOut} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Iftar Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue=\"03:30\"\r\n                                            name='Iftar'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={Iftar}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"Name\" name=\"Iftar\" placeholder=\"End time\"*/}\r\n                                    {/*              value={Iftar} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Ramadan\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    )\r\n\r\n\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (\r\n\r\n            <>\r\n                <Alert variant='success'>\r\n                    Announcement successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewRamadan()}\r\n        </div>\r\n    )\r\n}\r\nexport default AddRamadan","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addRamadan = (addJummah) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/ramadan/`, addJummah, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const getOneRamadan = (id1, id2, id3) => {\r\n    console.log(id1)\r\n    return axios.get(\r\n        `${port}/ramadan/?englishMonth=${id2}&englishYear=${id3}&englishDay=${id1}`\r\n    );\r\n};\r\nexport const updateRamadan = (id, addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/ramadan/${id}`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const deleteRamadan= (id) => {\r\n    console.log(id)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/ramadan/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport DayData from \"../../data/dayData.json\";\r\nimport MonthData from \"../../data/month.json\";\r\nimport YearData from \"../../data/yearData.json\";\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {deleteJummah, getOneJummah, updateJummah} from \"../../Api/jummah\";\r\nimport {deleteRamadan, updateRamadan} from \"../../Api/Ramadan\";\r\nimport {Alert, Snackbar, TextField} from \"@mui/material\";\r\n\r\nconst RamadanData = (allData) => {\r\n    const data = allData.data\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        arabDay: '',\r\n        arabMonth: '',\r\n        arabYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n    const [inputList, setInputList] = useState([{\r\n        shehriIn: \"level\",\r\n        shehriOut:\"time\",\r\n        Iftar: \"name\"\r\n    }]);\r\n\r\n    const {shehriIn, shehriOut, Iftar} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setAdanTime(data)\r\n        const prayer = data.prayer\r\n        setInputList(prayer)\r\n        console.log(prayer)\r\n    })\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    // console.log(data)\r\n\r\n    function updateChange(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        console.log(id)\r\n        updateRamadan(id, adanTime).then(res => {\r\n            setOpen(true);\r\n            isAuthenticated(res.data.token, () => {\r\n                setAdanTime({\r\n                    englishDay: '',\r\n                    englishMonth: '',\r\n                    englishYear: \"\",\r\n                    arabDay: '',\r\n                    arabMonth: '',\r\n                    arabYear: \"\",\r\n                    prayer: [],\r\n                })\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    function deleteAdan(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        deleteRamadan(id).then(res => {\r\n            isAuthenticated(res.data.token)\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Operation done successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Seheri Start Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue={x.shehriIn}\r\n                                            name='shehriIn'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={shehriIn}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"option\" name=\"shehriIn\" placeholder={shehriIn}*/}\r\n                                    {/*              defaultValue={x.shehriIn}*/}\r\n                                    {/*              value={shehriIn} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Seheri End Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue={x.shehriOut}\r\n                                            name='shehriOut'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={shehriOut}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"option\" name=\"shehriOut\" placeholder={shehriOut}*/}\r\n                                    {/*              defaultValue={x.shehriOut}*/}\r\n                                    {/*              value={shehriOut} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Iftar Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue={x.Iftar}\r\n                                            name='Iftar'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={Iftar}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"price\" name=\"Iftar\" placeholder=\"End time\"*/}\r\n                                    {/*              defaultValue={x.Iftar}*/}\r\n                                    {/*              value={Iftar} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n                <div className='d-flex justify-content-around'>\r\n\r\n                    <div>\r\n                        <Button variant=\"outline-primary\" onClick={deleteAdan}>Delete</Button>\r\n                    </div>\r\n                    <di>\r\n                        <Button variant=\"outline-primary\" onClick={updateChange}>Update</Button>\r\n                    </di>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RamadanData","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Card, Row, Col, Form, Modal} from \"react-bootstrap\";\r\nimport DayData from '../data/dayData.json'\r\nimport MonthData from \"../data/month.json\"\r\nimport YearData from \"../data/yearData.json\"\r\nimport AdanData from \"../data/adanData.json\"\r\nimport {addAdans} from \"../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../utils/auth\";\r\nimport './product.css'\r\nimport {getOneJummah} from \"../Api/jummah\";\r\nimport AddJummah from \"../components/Main/AddJummah\";\r\nimport AddRamadan from \"../components/Main/addRamadan\";\r\nimport {getOneRamadan} from \"../Api/Ramadan\";\r\nimport RamadanData from \"../components/Main/RamadanData\";\r\n\r\n\r\nconst Ramadan = () => {\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        shehriIn: \"level\",\r\n        shehriOut:\"time\",\r\n        Iftar: \"name\"\r\n    }]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const {shehriIn,shehriOut,Iftar} = inputList;\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    // const handleInputChange = (e, index) => {\r\n    //     const {name, value} = e.target;\r\n    //     const list = [...inputList];\r\n    //     list[index][name] = value;\r\n    //     setInputList(list);\r\n    //     setAdanTime({\r\n    //         ...adanTime,\r\n    //         prayer: inputList\r\n    //     })\r\n    // };\r\n    //\r\n    //\r\n    // const handleRemoveClick = index => {\r\n    //     const list = [...inputList];\r\n    //     list.splice(index, 1);\r\n    //     setInputList(list);\r\n    // };\r\n    //\r\n    // const handleAddClick = () => {\r\n    //     setInputList([...inputList, {\r\n    //         level: \"level\",\r\n    //         startTime: \"time\",\r\n    //         endTime: \"time\"\r\n    //     }])\r\n    // };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function search() {\r\n\r\n        const id1 = englishDay\r\n        const id2 = englishMonth\r\n        const id3 = englishYear\r\n        console.log(id3)\r\n        if (id1, id2, id3) {\r\n            getOneRamadan(id1, id2, id3).then(res => {\r\n                console.log(\"data\")\r\n                try {\r\n                    const allData = res.data[0]\r\n                    const prayer = allData.prayer[0]\r\n                    setAdanTime(allData)\r\n                    setInputList(prayer)\r\n                    console.log(adanTime)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n    // console.log(adanTime)\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" className=\"mb-4\" onClick={handleShow}>\r\n                Add Ramadan\r\n            </Button>\r\n\r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddRamadan/>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Form\r\n            >\r\n                <Form.Label className=\"text-center\">Update Ramadan</Form.Label>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"primary\" className=\"mb-4\" onClick={search}>\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n            <RamadanData data={adanTime}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ramadan","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\nconst token = JSON.parse(localStorage.getItem('jwt'))\r\nexport const addAnnouncement = (addAdan) => {\r\n\r\n    return axios.post(`${port}/announcement/`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const findAllAnnouncement = () => {\r\n    return axios.get(`${port}/announcement/`)\r\n}\r\n\r\nexport const findOneAnnouncement = (id) => {\r\n    return axios.get(`${port}/announcement/${id}`)\r\n}\r\n\r\nexport const updateAnnouncement = (id, data) => {\r\n    return axios.put(`${port}/announcement/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateAnnouncementImage = (id, data) => {\r\n    return axios.put(`${port}/announcement/image/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteAnnouncement = (id) => {\r\n    return axios.delete(`${port}/announcement/${id}`,  {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\n\r\nexport const addEvent = ( formData) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/event/`, formData, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const findAllEvent = () => {\r\n    return axios.get(`${port}/event/`)\r\n}\r\nexport const findOneEvent = (id) => {\r\n    return axios.get(`${port}/event/${id}`)\r\n}\r\nexport const updateEvent = (id, data) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/event/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteEvent = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/event/${id}`,  {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Form, Row} from \"react-bootstrap\";\r\nimport {findOneAnnouncement, updateAnnouncement, updateAnnouncementImage} from \"../../Api/Announcement\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nconst AnnounceUpdate = (data) => {\r\n    const {register, handleSubmit} = useForm({shouldUseNativeValidation: true});\r\n    const id = data.data\r\n\r\n    const [defaultData, setDefaultData] = useState({})\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        findOneAnnouncement(id).then(res => {\r\n            setDefaultData(res.data)\r\n        })\r\n    }, [])\r\n\r\n    console.log(defaultData)\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            await updateAnnouncement(id, data).then((res) => {\r\n                if (res) {\r\n                    setSuccess(true)\r\n                } else {\r\n                    setSuccess(false)\r\n                }\r\n            })\r\n        } catch (err) {\r\n            setSuccess(false)\r\n        }\r\n\r\n    };\r\n\r\n    const [image, setImage] = useState({})\r\n    const {eventImage} = image\r\n    const formData = new FormData\r\n    function handleChange(e) {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        console.log(value)\r\n        setImage({\r\n            ...image,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    function uploadImage() {\r\n        console.log(image)\r\n        // formData.append('eventImage', [image])\r\n        updateAnnouncementImage(id, image).then(r => console.log(r.data))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        {success && (<Alert> Ok</Alert>)}\r\n                        {!success && (<Alert> Something went Wrong</Alert>)}\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Name</Form.Label>\r\n                                            <Form.Control type=\"name\"\r\n                                                          name=\"eventName\"\r\n                                                          placeholder='Announcement Name'\r\n                                                          value={defaultData.eventName}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Date</Form.Label>\r\n\r\n                                            <Form.Control type=\"dates\"\r\n                                                          name=\"eventImage\"\r\n                                                          placeholder='Announcement Date'\r\n                                                          defaultValue={defaultData.eventDate}\r\n                                                          {...register(\"eventImage \")}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Time</Form.Label>\r\n\r\n                                            <Form.Control type=\"option\"\r\n                                                          time=\"eventDate\"\r\n                                                          placeholder='Announcement Time'\r\n                                                          defaultValue={defaultData.eventTime}\r\n                                                          {...register(\"eventTime\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Body</Form.Label>\r\n                                            <Form.Control as=\"textarea\"\r\n                                                          type=\"option\"\r\n                                                          name=\"eventBody\"\r\n                                                          placeholder='Announcement Body'\r\n                                                          defaultValue={defaultData.eventBody}\r\n                                                          {...register(\"eventBody\")}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <div className=\"d-flex justify-content-around\">\r\n                                    <div>\r\n                                        <Button variant=\"outline-danger\" type='submit'>Update?</Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Form>\r\n                    <Card>\r\n                        <Row>\r\n                            <Col>\r\n                                <img src={`${defaultData.eventImage}`} alt='img'/>\r\n                            </Col>\r\n                            <Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Default file input example</Form.Label>\r\n                                        <Form.Control type=\"file\"\r\n                                                      name=\"image\"\r\n                                                      onChange={e=>handleChange(e)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Button onClick={uploadImage} className=\"mb-4\" variant=\"primary\">Upload\r\n                                        Photo</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default AnnounceUpdate\r\n","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Button, Card, Col, Form, Modal, Row, Table} from \"react-bootstrap\"\r\nimport DatePicker from \"react-datepicker\";\r\nimport {\r\n    deleteAnnouncement,\r\n    findAllAnnouncement,\r\n    findOneAnnouncement,\r\n    updateAnnouncement\r\n} from \"../../Api/Announcement\";\r\nimport AnnounceUpdate from \"./AnnounceUpdate\";\r\n\r\n\r\nconst AnnouncementData = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [events, setUser] = useState([]);\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, []);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await findAllAnnouncement()\r\n        setUser(result.data.reverse());\r\n    };\r\n\r\n    const deleteUser = async id => {\r\n        await deleteAnnouncement(id);\r\n        await loadUsers();\r\n    };\r\n    const [announcement, setAnnouncement] = useState()\r\n    const updateUser = async (id) => {\r\n        handleShow();\r\n        setAnnouncement(id)\r\n    }\r\n    console.log(announcement)\r\n    return (\r\n        <>\r\n            <div className=\"text-center font-bold\"> All Announcement</div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Announcement Name</th>\r\n                    <th>Announcement Date</th>\r\n                    <th>Announcement Time</th>\r\n                    <th>Announcement Description</th>\r\n                    <th>Image</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {events && events.map((data, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{data.eventName}</td>\r\n                            <td>{data.eventDate}</td>\r\n                            <td>{data.eventTime}</td>\r\n                            <td>{data.eventBody}</td>\r\n                            <td width=\"10%\"><img width=\"auto\" src={data.eventImage}/></td>\r\n                            <td>\r\n                                <Button className=\"mr-4\" variant=\"primary\" onClick={() => updateUser(data._id)}>\r\n                                    Edit\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteUser(data._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n            <div>\r\n            </div>\r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Announcement</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AnnounceUpdate data={announcement}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AnnouncementData\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Form, Row} from \"react-bootstrap\";\r\nimport {findOneEvent, updateEvent} from \"../../Api/Event\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst eventUpdate = (data) => {\r\n    const { register, handleSubmit } = useForm({ shouldUseNativeValidation: true });\r\n    const id = data.datas._id\r\n    console.log(data)\r\n\r\n    const [defaultData, setDefaultData] = useState({})\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        findOneEvent(id).then(res => {\r\n            setDefaultData(res.data)\r\n            console.log(defaultData)\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append(\"eventIamge\", data.image[0]);\r\n            // console.log(data.image[0])\r\n            await updateEvent(id, data).then((res)=> {\r\n                if (res) {\r\n                    setSuccess(true)\r\n                }\r\n                else{\r\n                    setSuccess(false)\r\n                }\r\n            })\r\n        }catch (err){\r\n            setSuccess(false)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mt-4\">\r\n                <Col>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        {success && (<Alert > Ok</Alert>)}\r\n                        {!success && (<Alert > Something went Wrong</Alert>)}\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Name</Form.Label>\r\n                                            <Form.Control type=\"name\"\r\n                                                          name=\"eventName\"\r\n                                                          placeholder='Announcement Name'\r\n                                                          defaultValue={defaultData.eventName}\r\n                                                          {...register(\"eventName\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Date</Form.Label>\r\n\r\n                                            <Form.Control type=\"dates\"\r\n                                                          name=\"eventDate\"\r\n                                                          placeholder='Announcement Date'\r\n                                                          defaultValue={defaultData.eventDate}\r\n                                                          {...register(\"eventDate\")}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Time</Form.Label>\r\n\r\n                                            <Form.Control type=\"option\"\r\n                                                          time=\"eventDate\"\r\n                                                          placeholder='Announcement Time'\r\n                                                          defaultValue={defaultData.eventTime}\r\n                                                          {...register(\"eventTime\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Body</Form.Label>\r\n                                            <Form.Control as=\"textarea\"\r\n                                                          type=\"option\"\r\n                                                          name=\"eventBody\"\r\n                                                          placeholder='Announcement Body'\r\n                                                          defaultValue={defaultData.eventBody}\r\n                                                          {...register(\"eventBody\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {/*<Form.Group controlId=\"formFile\" className=\"mb-3\">*/}\r\n                                        {/*    <Form.Label>Default file input example</Form.Label>*/}\r\n                                        {/*    <Form.Control type=\"file\"*/}\r\n                                        {/*                  name=\"image\"*/}\r\n                                        {/*                  {...register(\"image\")}*/}\r\n\r\n                                        {/*    />*/}\r\n                                        {/*</Form.Group>*/}\r\n                                    </Col>\r\n                                </Row>\r\n                                <div className=\"d-flex justify-content-around\">\r\n                                    <div>\r\n                                        <Button variant=\"outline-danger\" type='submit'>Update?</Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default eventUpdate","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Modal, Table} from \"react-bootstrap\";\r\nimport { deleteEvent, findAllEvent} from \"../../Api/Event\";\r\nimport EventUpdate from \"./eventUpdate\";\r\n\r\n\r\n\r\nconst EventData = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [events, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, [events]);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await findAllEvent()\r\n        setUser(result.data.reverse());\r\n    };\r\n\r\n    const deleteUser = async id => {\r\n        await deleteEvent(id);\r\n        await loadUsers();\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"text-center font-bold\"> All Events</div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Event Name</th>\r\n                    <th>Event Date</th>\r\n                    <th>Event Time</th>\r\n                    <th>Event Description</th>\r\n                    <td>Image</td>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {events && events.map((data, index)=> {\r\n                    return(\r\n                        <tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td>{data.eventName}</td>\r\n                            <td>{data.eventDate}</td>\r\n                            <td>{data.eventTime}</td>\r\n                            <td>{data.eventBody}</td>\r\n                            <td width=\"10%\"><img width=\"auto\" src={data.eventImage}  alt=\"eventImage\"/></td>\r\n                            <td>\r\n                                <Button className=\"mr-4\" variant=\"primary\"  onClick={handleShow}>\r\n                                    Edit\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteUser(data._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Modal heading</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body><EventUpdate datas={data} /></Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                                        Close\r\n                                    </Button>\r\n                                    <Button variant=\"primary\" onClick={handleClose}>\r\n                                        Save Changes\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventData\r\n","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addBanners = (addBanner) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/banner/`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\nexport const findAllBanner = () => {\r\n    return axios.get(`${port}/banner/`)\r\n}\r\n\r\nexport const findOneBanner = (id) => {\r\n    return axios.get(`${port}/banner/${id}`)\r\n}\r\n\r\nexport const updateBanner  = (id, data) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/banner/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteBanner = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/banner/${id}`,  {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, { useEffect, useState} from \"react\";\r\nimport {deleteBanner, findAllBanner} from \"../../Api/Banner\";\r\nimport {Button, Modal, Table} from \"react-bootstrap\";\r\n\r\nconst BannerData = () => {\r\n    const [banners, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, [banners]);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await findAllBanner()\r\n        setUser(result.data.reverse());\r\n    };\r\n    const deleteUser = async id => {\r\n        await deleteBanner(id);\r\n        await loadUsers();\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"text-center font-bold\"> All Banner</div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Banner Name</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {banners && banners.map((data, index)=> {\r\n                    return(\r\n                        <tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td ><img width=\"20%\" src={data.bannerImage} /></td>\r\n                            <td>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteUser(data._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BannerData\r\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\nimport UpdateDailyAdan from \"./views/UpdateDailyAdan\";\nimport JummahData from \"./views/JummahData\";\nimport Ramadan from \"./views/Ramadan\";\nimport Announcement from \"./views/Announcement\";\nimport Event from './views/event'\nimport Banner from \"./views/Banner\";\n\n\nconst dashboardRoutes = [\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"nc-icon nc-alien-33\",\n  //   component: Upgrade,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/dailyAdan\",\n    name:\"Daily Adan\",\n    icon: \"nc-icon nc-circle-09\",\n    component: UpdateDailyAdan,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Jummah\",\n    name: \"Jummah & Others\",\n    icon: \"nc-icon nc-notes\",\n    component: JummahData,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/ramadan\",\n    name: \"Ramadan\",\n    icon: \"nc-icon nc-paper-2\",\n    component: Ramadan,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/announcement\",\n    name: \"Announcement\",\n    icon: \"nc-icon nc-atom\",\n    component: Announcement,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/event\",\n    name: \"Event\",\n    icon: \"nc-icon nc-pin-3\",\n    component: Event,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/banner\",\n    name: \"Banner\",\n    icon: \"nc-icon nc-bell-55\",\n    component: Banner,\n    layout: \"/admin\",\n  },\n];\n\nexport default dashboardRoutes;\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, Alert} from \"react-bootstrap\";\r\nimport {addAnnouncement} from \"../Api/Announcement\";\r\nimport {addEvent} from \"../Api/Event\";\r\nimport AnnouncementData from \"../components/Main/AnnouncementData\";\r\nimport {showSuccess} from \"../utils/message\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport announcementData from \"../components/Main/AnnouncementData\";\r\n\r\n\r\nconst Announcement = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        eventName: '',\r\n        eventBody: '',\r\n        eventDate: '',\r\n        eventTime:'',\r\n        formData: '',\r\n        image: '',\r\n        success: false\r\n    })\r\n\r\n    const {\r\n        eventName, eventBody,  eventDate, eventTime, formData\r\n    } = adanTime\r\n\r\n    useEffect(() => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setAdanTime({\r\n            ...adanTime\r\n        })\r\n\r\n        addAnnouncement(formData)\r\n            .then(response => {\r\n                setAdanTime({\r\n                    eventName: '',\r\n                    eventBody: '',\r\n                    eventDate: '',\r\n                    eventTime:'',\r\n                    formData: '',\r\n                    image: '',\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addAnnouncements = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Announcement name</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventName\" placeholder=\"End time\"\r\n                                          value={eventName} onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Announcement Date</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventDate\" placeholder=\"End time\"\r\n                                          value={eventDate} onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Announcement Time</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventTime\" placeholder=\"End time\"\r\n                                          value={eventTime}onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={eventBody} name=\"eventBody\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload Image</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Announcement\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n            <AnnouncementData/>\r\n        </Container>\r\n    )\r\n\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (<>\r\n                <Alert variant='success'>\r\n                   Announcement successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addAnnouncements()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Announcement\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, Alert} from \"react-bootstrap\";\r\nimport {isAuthenticated, userInfo} from \"../utils/auth\";\r\nimport {addEvent} from \"../Api/Event\";\r\nimport {addAdans} from \"../Api/AdanTime\";\r\nimport EventData from \"../components/Main/EventData\";\r\nimport {showSuccess} from \"../utils/message\";\r\n\r\n\r\nconst Event = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        eventName: '',\r\n        eventBody: '',\r\n        eventDate: '',\r\n        formData: '',\r\n        eventTime:'',\r\n        success: false\r\n    })\r\n\r\n    const {\r\n        eventName, eventBody,  eventDate, formData, eventTime\r\n    } = adanTime\r\n\r\n    useEffect(() => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setAdanTime({\r\n            ...adanTime\r\n        })\r\n\r\n        addEvent( formData)\r\n            .then(response => {\r\n                setAdanTime({\r\n                    eventName: '',\r\n                    eventBody: '',\r\n                    eventDate: '',\r\n                    eventTime: '',\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const addEvents = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Event name</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventName\" placeholder=\"End time\"\r\n                                          value={eventName} onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Event Date</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventDate\" placeholder=\"End time\"\r\n                                          value={eventDate}onChange={handleChange}/>\r\n                        </Form.Group>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Event Time</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventTime\" placeholder=\"End time\"\r\n                                          value={eventTime}onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={eventBody} name=\"eventBody\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Default file input example</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Event\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n            <div className='mt-4'>\r\n                <div className=\"text-center\">All Events</div>\r\n                <EventData />\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (<>\r\n                <Alert variant='success'>\r\n                    Event successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addEvents()}\r\n        </div>\r\n    )\r\n}\r\nexport default Event\r\n","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {addBanners} from \"../Api/Banner\";\r\nimport BannerData from \"../components/Main/BannerData\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Banner = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        formData: '',\r\n    })\r\n\r\n    const {\r\n        formData\r\n    } = adanTime\r\n\r\n    useEffect(() => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n    const history = useHistory();\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setAdanTime({\r\n            ...adanTime\r\n        })\r\n\r\n        addBanners( formData)\r\n            .then(response => {\r\n                setAdanTime({\r\n                    success: true\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addNewBanner = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Default file input example</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Banner\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n            <BannerData/>\r\n        </Container>\r\n\r\n    )\r\n    console.log(adanTime)\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (<>\r\n                <Alert variant='success'>\r\n                    Banner successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewBanner()}\r\n        </div>\r\n    )\r\n}\r\nexport default Banner","\nimport React, {Component} from \"react\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {Navbar, Container, Nav, Dropdown, Button} from \"react-bootstrap\";\n\nimport routes from \"routes.js\";\n\nfunction Header() {\n    const location = useLocation();\n    const mobileSidebarToggle = (e) => {\n        e.preventDefault();\n        document.documentElement.classList.toggle(\"nav-open\");\n        var node = document.createElement(\"div\");\n        node.id = \"bodyClick\";\n        node.onclick = function () {\n            this.parentElement.removeChild(this);\n            document.documentElement.classList.toggle(\"nav-open\");\n        };\n        document.body.appendChild(node);\n    };\n\n    const getBrandText = () => {\n        for (let i = 0; i < routes.length; i++) {\n            if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n                return routes[i].name;\n            }\n        }\n        return \"Brand\";\n    };\n\n    const logout = (e) => {\n        e.preventDefault()\n        localStorage.clear()\n    }\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container fluid>\n                <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\n                    <Button\n                        variant=\"dark\"\n                        className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\n                        onClick={mobileSidebarToggle}\n                    >\n                        <i className=\"fas fa-ellipsis-v\"></i>\n                    </Button>\n                    <Navbar.Brand\n                        href=\"#home\"\n                        onClick={(e) => e.preventDefault()}\n                        className=\"mr-2\"\n                    >\n                        {getBrandText()}\n                    </Navbar.Brand>\n                </div>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\n                    <span className=\"navbar-toggler-bar burger-lines\"></span>\n                    <span className=\"navbar-toggler-bar burger-lines\"></span>\n                    <span className=\"navbar-toggler-bar burger-lines\"></span>\n                </Navbar.Toggle>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"nav mr-auto\" navbar>\n\n\n\n                    </Nav>\n                    <Nav>\n\n                        <Nav.Item>\n                            <Nav.Link\n                                className=\"m-0\"\n                                onClick={(e) => logout(e)}\n\n                            >\n                                <Link  to=\"/login\" className=\"no-icon\">Log out</Link>\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer px-0 px-lg-3\">\n\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/reactlogo.55f6660b.png\";","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { useLocation, NavLink } from \"react-router-dom\";\n\nimport { Nav } from \"react-bootstrap\";\n\nimport logo from \"assets/img/reactlogo.png\";\n\nfunction Sidebar({ color, image, routes }) {\n  const location = useLocation();\n  const activeRoute = (routeName) => {\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  return (\n    <div className=\"sidebar\" data-image={image} data-color={color}>\n      <div\n        className=\"sidebar-background\"\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n        }}\n      />\n      <div className=\"sidebar-wrapper\">\n        <div className=\"logo d-flex align-items-center justify-content-start\">\n          <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini mx-1\"\n          >\n            <div className=\"logo-img\">\n              <img\n                src={require(\"../../MDQ_Logo_Text_White.png\").default}\n                alt=\"...\"\n              />\n            </div>\n          </a>\n          <a className=\"simple-text\" href=\"#\">\n            Masjid Darul Quran\n          </a>\n        </div>\n        <Nav>\n          {routes.map((prop, key) => {\n            if (!prop.redirect)\n              return (\n                <li\n                  className={\n                    prop.upgrade\n                      ? \"active active-pro\"\n                      : activeRoute(prop.layout + prop.path)\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            return null;\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/sidebar-3.51e747b6.jpg\";","export default __webpack_public_path__ + \"static/media/sidebar-1.2ea74e53.jpg\";","export default __webpack_public_path__ + \"static/media/sidebar-2.00b17713.jpg\";","export default __webpack_public_path__ + \"static/media/sidebar-4.b7eb4d1b.jpg\";","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { useLocation, Route, Switch } from \"react-router-dom\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport sidebarImage from \"assets/img/sidebar-3.jpg\";\n\nfunction Admin() {\n  const [image, setImage] = React.useState(sidebarImage);\n  const [color, setColor] = React.useState(\"black\");\n  const [hasImage, setHasImage] = React.useState(true);\n  const location = useLocation();\n  const mainPanel = React.useRef(null);\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => <prop.component {...props} />}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainPanel.current.scrollTop = 0;\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      var element = document.getElementById(\"bodyClick\");\n      element.parentNode.removeChild(element);\n    }\n  }, [location]);\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Sidebar color={color} image={hasImage ? image : \"\"} routes={routes} />\n        <div className=\"main-panel\" ref={mainPanel}>\n          <AdminNavbar />\n          <div className=\"content\">\n            <Switch>{getRoutes(routes)}</Switch>\n          </div>\n          <Footer />\n        </div>\n      </div>\n      {/*<FixedPlugin*/}\n      {/*  hasImage={hasImage}*/}\n      {/*  setHasImage={() => setHasImage(!hasImage)}*/}\n      {/*  color={color}*/}\n      {/*  setColor={(color) => setColor(color)}*/}\n      {/*  image={image}*/}\n      {/*  setImage={(image) => setImage(image)}*/}\n      {/*/>*/}\n    </>\n  );\n}\n\nexport default Admin;\n","import {useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {login} from '../Api/auth'\r\nimport {authenticate} from '../utils/auth';\r\n\r\nimport './User.css';\r\nimport {Form} from \"react-bootstrap\";\r\n\r\n\r\nconst Login = () => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        success: false\r\n    });\r\n\r\n    const {email, password, success} = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({...values})\r\n        login({email, password})\r\n            .then(response => {\r\n                authenticate(response.data.token, () => {\r\n                    setValues({\r\n                        email: '',\r\n                        password: '',\r\n                        success: true,\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const LoginForm = () => (\r\n        <>\r\n            <div className=\"mx-auto\" data-v-791b20d9>\r\n                <div data-v-791b20d9>\r\n                    <section className=\"flex flex-col md:flex-row items-center md:justify-center py-10 md:py-6\" data-v-791b20d9>\r\n                        <div className=\"bg-white w-full md:w-[450px] px-6 lg:px-8 flex items-start py-12 justify-center relative flex-shrink\">\r\n                            <div className=\"w-full h-full\">\r\n                                <h1 className=\"text-xl md:text-2xl font-bold leading-tight\">\r\n                                    Log in to your account\r\n                                </h1>\r\n                                <Form onSubmit={handleSubmit} method=\"post\" class=\"mt-6\">\r\n                                    <div><label className=\"block text-gray-700\">Email Address</label>\r\n                                        <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter Email\" value={email} required onChange={handleChange} autofocus=\"autofocus\"\r\n                                               autoComplete={true}\r\n                                               className=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-4\"><label className=\"block text-gray-700\">Password</label> <input\r\n                                        type=\"password\" name=\"password\" className=\"form-control\" value={password} required onChange={handleChange} placeholder=\"Enter Password\" class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500\r\n            focus:bg-white focus:outline-none\"/></div>\r\n\r\n                                    <div className=\"text-right mt-2\"><a href=\"forgot-password.html\"\r\n                                                                        className=\"text-sm font-semibold text-gray-700 hover:text-primary-700 focus:text-primary-700\">Forgot\r\n                                        Password?</a></div>\r\n                                    <button onSubmit={handleSubmit} type=\"submit\" className=\"w-full block bg-primary-500 hover:bg-primary-400 focus:bg-primary-400 text-white font-semibold rounded-lg\r\n          px-4 py-3 mt-6\">\r\n                                        Log In\r\n                                    </button>\r\n\r\n                                </Form>\r\n                                <hr className=\"my-6 border-gray-300 w-full\"/>\r\n\r\n                                <p className=\"mt-5 text-center\">\r\n                                    Need an account?\r\n                                    <Link to='registration'\r\n                                          class=\"text-primary-500 hover:text-primary-700 font-semibold\">Create an\r\n                                        account</Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    const showSuccess = () =>\r\n    {\r\n        if (success) return (\r\n            <Redirect to='/admin'/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {LoginForm()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const login = (user) => {\r\n    return axios.post(`${port}/auth/login`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};\r\n\r\nexport const registration = (user) => {\r\n    console.log(user)\r\n    return axios.post(`${port}/auth/register`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {registration} from \"../Api/auth\";\r\nimport {authenticate} from \"../utils/auth\";\r\n\r\nfunction Copyright() {\r\n\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Registration() {\r\n    // let history = useNavigate();\r\n    const {register, handleSubmit, setError, formState: {errors}} = useForm();\r\n\r\n    const onSubmit = data => {\r\n        if (data.password === data.rePassword) {\r\n            const registerData = {\r\n                fullName: data.fullName,\r\n                email: data.email,\r\n                // phoneNumber: data.number,\r\n                password: data.password\r\n            }\r\n            console.log(registerData)\r\n            registration(registerData).then(res => {\r\n                authenticate(res.data.token, () => {\r\n                    history({\r\n                        pathname: '/home'\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            setError(\"re_password\", {\r\n                type: \"server\",\r\n                message: \"Passwords do not match\",\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Registration\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"fullName\"\r\n                            label=\"Full Name\"\r\n                            name=\"fullName\"\r\n                            autoComplete=\"fullName\"\r\n                            autoFocus\r\n                            {...register(\"fullName\", {required: \"Full Name is required\"})}\r\n                            error={Boolean(errors.fullName)}\r\n                            helperText={errors.fullName?.message}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            {...register(\"email\", {required: \"Email is required\"})}\r\n                            error={Boolean(errors.email)}\r\n                            helperText={errors.email?.message}\r\n                        />\r\n                        {/*<TextField*/}\r\n                        {/*    margin=\"normal\"*/}\r\n                        {/*    fullWidth*/}\r\n                        {/*    id=\"number\"*/}\r\n                        {/*    label=\"Phone Number\"*/}\r\n                        {/*    name=\"number\"*/}\r\n                        {/*    autoComplete=\"number\"*/}\r\n                        {/*    {...register(\"number\", {required: \"PhoneNumber is required\"})}*/}\r\n                        {/*    error={Boolean(errors.number)}*/}\r\n                        {/*    helperText={errors.number?.message}*/}\r\n                        {/*/>*/}\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            {...register(\"password\", {required: \"Password is required\"})}\r\n                            error={Boolean(errors.password)}\r\n                            helperText={errors.password?.message}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            name=\"rePassword\"\r\n                            label=\"Re-enter Password\"\r\n                            type=\"Password\"\r\n                            id=\"rePassword\"\r\n                            autoComplete=\"current-password\"\r\n                            {...register(\"rePassword\", {required: \"Re-Enter Password is required\"})}\r\n                            error={Boolean(errors.rePassword)}\r\n                            helperText={errors.rePassword?.message}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                            onClick={handleSubmit(onSubmit)}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link to=\"/\" href='/' variant=\"body2\">\r\n                                    {\"Already have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 8, mb: 4}}/>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import RegistrationForm from './RegistrationForm';\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <>\r\n            <RegistrationForm/>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Registration;","import {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport AdminLayout from \"./layouts/Admin\";\r\nimport React from \"react\";\r\nimport {AuthProvider} from \"./utils/auth\";\r\nimport Login from \"./views/Login\";\r\nimport {updateAdan} from \"./components/Main/updateAdan\";\r\nimport Registration from \"./layouts/Registration\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />}/>\r\n                <Route path='/' component={Login}/>\r\n                {/*<Route path='/register' component={Registration}/>*/}\r\n            </Switch>\r\n        </AuthProvider>\r\n    )\r\n}\r\nexport default App","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}