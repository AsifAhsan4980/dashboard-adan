{"version":3,"sources":["MDQ_Logo_Text_White.png","utils/dataBasePort.js","Api/AdanTime.js","views/Dashboard.js","utils/auth.js","components/Main/AddDailyAdan.js","components/Main/DailyData.js","views/UpdateDailyAdan.js","components/Main/AddJummah.js","Api/jummah.js","components/Main/JummaData.js","views/JummahData.js","components/Main/addRamadan.js","Api/Ramadan.js","components/Main/RamadanData.js","views/Ramadan.js","Api/Announcement.js","Api/Event.js","components/Main/AnnounceUpdate.js","components/Main/AnnouncementData.js","components/Main/eventUpdate.js","components/Main/EventData.js","Api/Banner.js","components/Main/BannerData.js","routes.js","views/Announcement.js","views/event.js","views/Banner.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","assets/img/reactlogo.png","components/Sidebar/Sidebar.js","assets/img/sidebar-3.jpg","assets/img/sidebar-1.jpg","assets/img/sidebar-2.jpg","assets/img/sidebar-4.jpg","layouts/Admin.js","views/Login.js","Api/auth.js","layouts/RegistrationForm.js","layouts/Registration.js","App.js","index.js"],"names":["port","addAdans","addAdan","token","JSON","parse","localStorage","getItem","console","log","axios","post","headers","Dashboard","React","useState","age","setAge","onSubmit","e","preventDefault","addProduct","put","updateNotificationTime","notificationTime","fluid","Card","Body","className","Box","Paper","style","padding","Typography","FormControl","fullWidth","sx","m","InputLabel","id","Select","labelId","value","label","onChange","event","target","MenuItem","mt","onClick","variant","authenticate","cb","window","setItem","stringify","isAuthenticated","exp","jwt_decode","Date","getTime","removeItem","initialstate","user","jwt_Token_decoded","Jwt_Decode","now","clear","AuthContext","createContext","login","userData","logout","AuthReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","AddDailyAdan","success","values","englishDay","englishMonth","englishYear","timing","adanTime","setAdanTime","rows","setRow","level","startTime","endTime","inputList","setInputList","handleInputChange","index","name","list","handleAddClick","handleChange","files","handleSubmit","then","response","data","message","setOpens","setOpen","resData","moment","createdAt","format","fazr","sunrise","duhr","asr","magrib","isha","catch","err","open","handleClose","reason","opens","handleCloses","vertical","horizontal","Alert","showSuccess","Container","Snackbar","autoHideDuration","onClose","severity","width","anchorOrigin","length","TableContainer","component","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","border","scope","Form","Row","Col","Group","controlId","Label","Control","as","defaultValue","DayData","day","MonthData","YearData","year","x","i","AdanData","TextField","InputLabelProps","shrink","inputProps","step","Button","splice","handleRemoveClick","DailyData","allData","arabDay","arabMonth","arabYear","prayer","useEffect","delete","deleteAdans","_id","res","updateProductss","UpdateDailyAdan","show","setShow","Modal","size","onHide","Header","closeButton","Title","Footer","id1","id2","id3","get","getOneAdan","AddJummah","setValues","khutba","imam","addJummah","addJummahs","placeholder","JummahDatas","deleteJummah","updateJummah","JummahData","getOneJummah","AddRamadan","shehriIn","shehriOut","Iftar","addRamadan","RamadanData","deleteRamadan","updateRamadan","Ramadan","getOneRamadan","updateAnnouncement","deleteAnnouncement","updateEvent","deleteEvent","AnnounceUpdate","useForm","shouldUseNativeValidation","register","defaultData","setDefaultData","setSuccess","findOneAnnouncement","a","image","setImage","eventImage","FormData","eventName","eventDate","time","eventTime","eventBody","src","alt","updateAnnouncementImage","r","AnnouncementData","events","setUser","loadUsers","result","reverse","deleteUser","announcement","setAnnouncement","updateUser","striped","bordered","hover","eventUpdate","datas","findOneEvent","EventData","handleShow","deleteBanner","BannerData","banners","bannerImage","dashboardRoutes","path","icon","layout","formData","set","location","reload","addEvent","useHistory","addBanner","addBanners","useLocation","Navbar","bg","expand","document","documentElement","classList","toggle","node","createElement","onclick","this","parentElement","removeChild","body","appendChild","Brand","href","routes","pathname","indexOf","getBrandText","Toggle","Collapse","Nav","navbar","Item","Link","to","Component","Sidebar","color","backgroundImage","require","default","prop","key","redirect","upgrade","routeName","activeClassName","Admin","sidebarImage","hasImage","mainPanel","useRef","scrollTop","scrollingElement","current","innerWidth","element","getElementById","parentNode","ref","AdminNavbar","render","Login","email","password","method","class","required","autofocus","autoComplete","createTheme","App","ReactDOM"],"mappings":"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","file":"static/js/main.85305ad1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MDQ_Logo_Text_White.7a19b7d1.png\";","//export const port ='http://localhost:8989'\r\nexport const port ='http://18.217.131.163:8989'","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addAdans = (addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    console.log(\"ok\")\r\n    return axios.post(`${port}/adan/oneMonth/`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const updateAdans = (id, addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/adan/oneMonth/${id}`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\n\r\nexport const getOneAdan = (id1, id2, id3) => {\r\n    console.log(id1)\r\n    return axios.get(\r\n        `${port}/adan/oneDayDashboard/?englishMonth=${id2}&englishYear=${id3}&englishDay=${id1}`\r\n    );\r\n};\r\n\r\n\r\nexport const deleteAdans= (id) => {\r\n    console.log(id)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete (`${port}/adan/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const updateProductss = (id, addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    console.log(addProduct)\r\n    return axios.put(`${port}/adan/${id}`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\n// export const deleteOneProducts = (id) => {\r\n//     console.log(id)\r\n//     const token = JSON.parse(localStorage.getItem('jwt'))\r\n//     return axios.delete(\r\n//         `http://18.217.131.163:8989/admin/product/${id}`, {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Authorization': `Bearer ${token}`\r\n//             }\r\n//         }\r\n//     );\r\n// };\r\n\r\nexport const updateNotificationTime = ( addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    console.log(addProduct)\r\n    return axios.put(`${port}/adan/notificationTime/62089d098849a46b962af7b1`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};","import React from \"react\";\r\n// react-bootstrap components\r\nimport {\r\n    Card,\r\n\r\n} from \"react-bootstrap\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {FormControl, InputLabel, MenuItem, Paper, Select,Container} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {updateNotificationTime} from \"../Api/AdanTime\";\r\n\r\nfunction Dashboard() {\r\n    const [age, setAge] = React.useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(age)\r\n        updateNotificationTime({\r\n            notificationTime : age\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <h2 className=\"text-center mt-lg-5\">\r\n                            Welcome To Dashboard\r\n                        </h2>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Box>\r\n                    <Paper>\r\n                        <Box style={{padding:20}}>\r\n                            <Typography>Push Notification</Typography>\r\n                            <FormControl fullWidth sx={{m:2}}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Next adan notification time</InputLabel>\r\n                                <Select\r\n\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={age}\r\n                                    label=\"Age\"\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <MenuItem value={5}>5 minutes</MenuItem>\r\n                                    <MenuItem value={10}>10 minutes</MenuItem>\r\n                                    <MenuItem value={15}>15 minutes</MenuItem>\r\n                                    <MenuItem value={20}>20 minutes</MenuItem>\r\n                                    <MenuItem value={25}>25 minutes</MenuItem>\r\n                                    <MenuItem value={30}>30 minutes</MenuItem>\r\n                                    <MenuItem value={35}>35 minutes</MenuItem>\r\n                                    <MenuItem value={40}>40 minutes</MenuItem>\r\n                                    <MenuItem value={45}>45 minutes</MenuItem>\r\n                                    <MenuItem value={50}>50 minutes</MenuItem>\r\n                                    <MenuItem value={55}>55 minutes</MenuItem>\r\n                                    <MenuItem value={60}>60 minutes</MenuItem>\r\n                                </Select>\r\n                                <Button sx={{mt:2}} onClick={e=>onSubmit(e)} variant=\"outlined\">Update</Button>\r\n                            </FormControl>\r\n\r\n                        </Box>\r\n\r\n                    </Paper>\r\n\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import jwt_decode from 'jwt-decode';\r\nimport {createContext, useReducer} from \"react\"\r\n\r\nexport const authenticate = (token, cb) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(token));\r\n        cb();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window === 'undefined') return false;\r\n    if (localStorage.getItem('jwt')) {\r\n        const { exp } = jwt_decode(JSON.parse(localStorage.getItem('jwt')));\r\n        if((new Date()).getTime() < exp * 1000){\r\n            return true;\r\n        }else{\r\n            localStorage.removeItem('jwt');\r\n            return false\r\n        }\r\n\r\n    } else return false;\r\n}\r\n\r\nexport const userInfo = () => {\r\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\r\n    const decoded = jwt_decode(jwt);\r\n    return { ...decoded, token: jwt }\r\n}\r\n\r\n\r\nconst initialstate = {\r\n    user: null,\r\n};\r\nif (localStorage.getItem(\"JWT_Token\")) {\r\n    const jwt_Token_decoded = Jwt_Decode(localStorage.getItem(\"JWT_Token\"));\r\n    console.log(jwt_Token_decoded.exp * 1000);\r\n    console.log(Date.now());\r\n    if (jwt_Token_decoded.exp * 1000 < Date.now()) {\r\n        localStorage.clear(); // this runs only when I refresh the page or reload on route change it dosent work\r\n    } else {\r\n        initialstate.user = jwt_Token_decoded;\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userData) => {},\r\n    logout: () => {},\r\n});\r\nconst AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const AuthProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, initialstate);\r\n    const login = (userData) => {\r\n        localStorage.setItem(\"JWT_Token\", userData.token);\r\n        dispatch({\r\n            type: \"LOGIN\",\r\n            payload: userData,\r\n        });\r\n    };\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        dispatch({ action: \"LOGOUT\" });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ user: state.user, login, logout }}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport {AuthContext};","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown} from \"react-bootstrap\";\r\nimport DayData from '../../data/dayData.json'\r\nimport MonthData from \"../../data/month.json\"\r\nimport YearData from \"../../data/yearData.json\"\r\nimport AdanData from \"../../data/adanData.json\"\r\nimport {addAdans} from \"../../Api/AdanTime\";\r\nimport moment from 'moment'\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {\r\n    Snackbar,\r\n    TextField,\r\n    Alert,\r\n    TableContainer,\r\n    Paper,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody\r\n} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {Table} from \"reactstrap\";\r\n// import TimePicker from 'react-bootstrap-time-picker';\r\n\r\n\r\nconst AddDailyAdan = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const {success} = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        timing: [],\r\n    })\r\n    const [rows, setRow] = useState([ ]);\r\n\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, timing\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        level: \"\",\r\n        startTime: \"\",\r\n        endTime: ''\r\n    }]);\r\n\r\n    const {level, startTime, endTime} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \" \",\r\n            startTime: \" \",\r\n            endTime: \" \"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addAdans({englishDay, englishMonth, englishYear, timing, level, startTime, endTime})\r\n            .then(response => {\r\n                if (response.data.message === 'data exsit') {\r\n                    setOpens(true);\r\n                } else {\r\n                    setOpen(true);\r\n                    let resData = response.data\r\n                    setRow([\r\n                        ...rows,\r\n                        createData(`${resData.englishDay}/${resData.englishMonth}/${resData.englishYear} (added at ${moment(resData.createdAt, ).format(' h:mm:ss a')})`, `${resData?.timing[0]?.startTime} | ${resData?.timing[0]?.endTime}`, `${resData?.timing[1]?.startTime} `, `${resData?.timing[2]?.startTime} | ${resData?.timing[2]?.endTime}`, `${resData?.timing[3]?.startTime} | ${resData?.timing[3]?.endTime}`,`${resData?.timing[4]?.startTime} | ${resData?.timing[4]?.endTime}`,`${resData?.timing[5]?.startTime} | ${resData?.timing[5]?.endTime}`)\r\n                    ])\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function createData(\r\n        name: string,\r\n        fazr: string,\r\n        sunrise: string,\r\n        duhr: string,\r\n        asr: string,\r\n        magrib : string,\r\n        isha: string\r\n    ) {\r\n        return {name, fazr, sunrise, duhr, asr, magrib, isha};\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const [opens, setOpens] = React.useState(false);\r\n\r\n    const handleCloses = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpens(false);\r\n    };\r\n    const vertical = 'top'\r\n    const horizontal = 'right'\r\n    const addNewAdan = () => (\r\n        <Container fluid>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{width: '100%'}} key={vertical + horizontal}\r\n                       anchorOrigin={{vertical, horizontal}}>\r\n                    Data added successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={opens} autoHideDuration={6000} onClose={handleCloses}>\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}} key={vertical + horizontal}\r\n                       anchorOrigin={{vertical, horizontal}}>\r\n                    Data already exist\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            {rows.length!==0 && (\r\n                <Box>\r\n                    <Typography>Last added data</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{minWidth: 650}} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell align=\"right\">Fazr(Adan| Iqamah)</TableCell>\r\n                                    <TableCell align=\"right\">Sunrise</TableCell>\r\n                                    <TableCell align=\"right\">Duhr(Adan| Iqamah)</TableCell>\r\n                                    <TableCell align=\"right\">Asr(Adan| Iqamah)</TableCell>\r\n                                    <TableCell align=\"right\">Magrib(Adan| Iqamah)</TableCell>\r\n                                    <TableCell align=\"right\">Isha(Adan| Iqamah)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows?.map((row) => (\r\n                                    <TableRow\r\n                                        key={row.name}\r\n                                        sx={{'&:last-child td, &:last-child th': {border: 0}}}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.fazr}</TableCell>\r\n                                        <TableCell align=\"right\">{row.sunrise}</TableCell>\r\n                                        <TableCell align=\"right\">{row.duhr}</TableCell>\r\n                                        <TableCell align=\"right\">{row.asr}</TableCell>\r\n                                        <TableCell align=\"right\">{row.magrib}</TableCell>\r\n                                        <TableCell align=\"right\">{row.isha}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            )}\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\" aria-label=\"Default select example\"\r\n                                                  defaultValue=\"State...\"\r\n                                                  name=\"level\" value={level} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Typography sx={{m: 1}} >Adan time</Typography>\r\n                                <TextField\r\n                                    label=\"Pick time\"\r\n                                    type=\"time\"\r\n                                    defaultValue=\"07:30\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 60, // 5 min\r\n                                    }}\r\n                                    sx={{width: 150}}\r\n                                    name='startTime'\r\n                                    value={startTime}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Typography sx={{m: 1}} >Iqamah time</Typography>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        defaultValue=\"07:30\"\r\n                                        name='endTime'\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{width: 150}}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        value={endTime}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new prayer\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    )\r\n\r\n    const showSuccess = (data) => {\r\n\r\n        if (success) return (\r\n\r\n            <>\r\n                <Alert variant='success'>\r\n                    {data}\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewAdan()}\r\n        </div>\r\n    )\r\n}\r\nexport default AddDailyAdan","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport AdanData from \"../../data/adanData.json\";\r\nimport DayData from \"../../data/dayData.json\";\r\nimport MonthData from \"../../data/month.json\";\r\nimport YearData from \"../../data/yearData.json\";\r\nimport {deleteAdans, updateProductss} from \"../../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {Alert, Snackbar, TextField} from \"@mui/material\";\r\n\r\nconst DailyData = (allData) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const data = allData.data\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        arabDay: '',\r\n        arabMonth: '',\r\n        arabYear: \"\",\r\n        timing: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n    const [inputList, setInputList] = useState([{\r\n        level: \"\",\r\n        startTime: \"\",\r\n        endTime: \"\"\r\n    }]);\r\n\r\n    const {level, startTime, endTime} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \"\",\r\n            startTime: \"\",\r\n            endTime: \"\"\r\n        }])\r\n    };\r\n\r\n    useEffect(() => {\r\n        setAdanTime(data)\r\n        const timing = data.timing\r\n        setInputList(timing)\r\n        console.log(timing)\r\n        // timing && timing.map((data)=>{\r\n        //     setInputList(data)\r\n        // })\r\n    })\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    console.log(data)\r\n\r\n    function updateChange(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        console.log(id)\r\n        updateProductss(id, adanTime).then(res => {\r\n            isAuthenticated(res.data.token, () => {\r\n                setAdanTime({\r\n                    englishDay: '',\r\n                    englishMonth: '',\r\n                    englishYear: \"\",\r\n                    arabDay: '',\r\n                    arabMonth: '',\r\n                    arabYear: \"\",\r\n                    timing: [],\r\n                })\r\n\r\n                setValues({\r\n                    success: true,\r\n                })\r\n            })\r\n            setOpen(true)\r\n        } ).catch(err => console.log(err))\r\n    }\r\n\r\n    function deleteAdan(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        deleteAdans(id).then(res => {\r\n            isAuthenticated(res.data.token)\r\n            setOpen(true);\r\n        }).catch(err => console.log(err))\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Operation done successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\"\r\n                                                  defaultValue={x.level}\r\n                                                  name=\"level\" value={level} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Adan time</Form.Label>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{ width: 150 }}\r\n                                        name='startTime'\r\n                                        value={x.startTime}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        defaultValue={x.startTime}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/*<Form.Control type=\"option\" name=\"startTime\" placeholder={startTime}*/}\r\n                                {/*              defaultValue={x.startTime}*/}\r\n                                {/*              value={startTime} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Iqamah time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            name='endTime'\r\n                                            value={x.endTime}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            defaultValue={x.endTime}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/*<Form.Control type=\"price\" name=\"endTime\" placeholder=\"End time\"*/}\r\n                                    {/*              defaultValue={x.endTime}*/}\r\n                                    {/*              value={endTime} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n                <div className='d-flex justify-content-around'>\r\n\r\n                    <div>\r\n                        <Button variant=\"outline-primary\" onClick={deleteAdan}>Delete</Button>\r\n                    </div>\r\n                    <di>\r\n                        <Button variant=\"outline-primary\" onClick={updateChange}>Update</Button>\r\n                    </di>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DailyData","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Button, Card, Row, Col, Form, Modal} from \"react-bootstrap\";\r\nimport AddDailyAdan from \"../components/Main/AddDailyAdan\";\r\nimport DayData from '../data/dayData.json'\r\nimport MonthData from \"../data/month.json\"\r\nimport YearData from \"../data/yearData.json\"\r\nimport {addAdans, getOneAdan} from \"../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../utils/auth\";\r\n\r\nimport DailyData from \"../components/Main/DailyData\";\r\n\r\n\r\nconst UpdateDailyAdan = () => {\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        timing: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, timing\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        level: \"level\",\r\n        startTime: \"time\",\r\n        endTime: \"time\"\r\n    }]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const {level, startTime, endTime} = inputList;\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \"level\",\r\n            startTime: \"time\",\r\n            endTime: \"time\"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addAdans({englishDay, englishMonth, englishYear, timing, level, startTime, endTime})\r\n            .then(response => {\r\n                isAuthenticated(response.data.token, () => {\r\n                    setAdanTime({\r\n                        englishDay: '',\r\n                        englishMonth: '',\r\n                        englishYear: \"\",\r\n                        timing: inputList,\r\n                        level: \"\",\r\n                        startTime: \"\",\r\n                        endTime: \"\",\r\n                        success: true,\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    function search() {\r\n\r\n        const id1 = englishDay\r\n        const id2 = englishMonth\r\n        const id3 = englishYear\r\n        if (id1, id2, id3) {\r\n            getOneAdan(id1, id2, id3).then(res => {\r\n\r\n                try {\r\n                 const allData = res.data[0]\r\n                    const timing = allData.timing\r\n                    setAdanTime(allData)\r\n                    setInputList(timing)\r\n                    console.log('database',adanTime)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" className=\"mb-4\" onClick={handleShow}>\r\n                Add Daily Adan\r\n            </Button>\r\n\r\n            <Modal show={show} size=\"xl\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Daily Adan</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddDailyAdan/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Label className=\"text-center\">Update Adan</Form.Label>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"primary\" className=\"mb-4\" onClick={search}>\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n            <DailyData data={adanTime}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateDailyAdan","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, Alert} from \"react-bootstrap\";\r\nimport DayData from '../../data/dayData.json'\r\nimport MonthData from \"../../data/month.json\"\r\nimport YearData from \"../../data/yearData.json\"\r\nimport AdanData from \"../../data/jummah.json\"\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {addJummahs} from \"../../Api/jummah\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nconst AddJummah = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        label: \"level\",\r\n        khutba: \"time\",\r\n        imam: \"name\"\r\n    }]);\r\n\r\n    const {label, khutba, imam} = inputList;\r\n\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            prayer: inputList\r\n        })\r\n    };\r\n\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addJummahs({ englishDay, englishMonth, englishYear, prayer, label, khutba, imam})\r\n            .then(response => {\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                isAuthenticated(response.data.token, () => {\r\n                    setAdanTime({englishDay: '',\r\n                        englishMonth: '',\r\n                        englishYear: \"\",\r\n                        prayer: inputList,\r\n                        success: true,\r\n                        label: \"\",\r\n                        khutba: \"\",\r\n                        imam: \"\"\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    const addNewPrayer = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\" aria-label=\"Default select example\"\r\n                                                  defaultValue=\"State...\"\r\n                                                  name=\"label\" value={label} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Khutba Time</Form.Label>\r\n                                <TextField\r\n                                    label=\"Pick time\"\r\n                                    type=\"time\"\r\n                                    defaultValue=\"07:30\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 60, // 5 min\r\n                                    }}\r\n                                    sx={{ width: 150 }}\r\n                                    name='khutba'\r\n                                    value={khutba}\r\n                                    onChange={e => handleInputChange(e, i)}\r\n\r\n                                />\r\n                                {/*<Form.Control type=\"option\" name=\"khutba\" placeholder=\"Start time\"*/}\r\n                                {/*              value={khutba} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Imam</Form.Label>\r\n                                    <Form.Control type=\"Name\" name=\"imam\" placeholder=\"End time\"\r\n                                                  value={imam} onChange={e => handleInputChange(e, i)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            {/*<Col className=\"mt-4\">*/}\r\n                            {/*    {inputList.length !== 1 && <Button*/}\r\n                            {/*        className=\"mr10\"*/}\r\n                            {/*        onClick={() => handleRemoveClick(i)}>Remove</Button>}*/}\r\n                            {/*    {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}*/}\r\n                            {/*</Col>*/}\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new prayer\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    )\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (\r\n\r\n            <>\r\n                <Alert variant='success'>\r\n                    Announcement successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewPrayer()}\r\n        </div>\r\n    )\r\n}\r\nexport default AddJummah","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addJummahs = (addJummah) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/jummah/`, addJummah, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const getOneJummah = (id1, id2, id3) => {\r\n    console.log(id1)\r\n    return axios.get(\r\n        `${port}/jummah/?englishMonth=${id2}&englishYear=${id3}&englishDay=${id1}`\r\n    );\r\n};\r\nexport const updateJummah = (id, addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/jummah/${id}`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const deleteJummah= (id) => {\r\n    console.log(id)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/jummah/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport AdanData from \"../../data/adanData.json\";\r\nimport DayData from \"../../data/dayData.json\";\r\nimport MonthData from \"../../data/month.json\";\r\nimport YearData from \"../../data/yearData.json\";\r\nimport {deleteAdans, updateProductss} from \"../../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {deleteJummah, getOneJummah, updateJummah} from \"../../Api/jummah\";\r\nimport {Alert, Snackbar, TextField} from \"@mui/material\";\r\n\r\nconst JummahDatas = (allData) => {\r\n    const data = allData.data\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        arabDay: '',\r\n        arabMonth: '',\r\n        arabYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n    const [inputList, setInputList] = useState([{\r\n        label: \"\",\r\n        khutba: \"\",\r\n        imam: \"\"\r\n    }]);\r\n\r\n    const {label, khutba, imam} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n    //\r\n    // const handleRemoveClick = index => {\r\n    //     const list = [...inputList];\r\n    //     list.splice(index, 1);\r\n    //     setInputList(list);\r\n    // };\r\n    //\r\n    // const handleAddClick = () => {\r\n    //     setInputList([...inputList, {\r\n    //         label: \"\",\r\n    //         khutba: \"\",\r\n    //         imam: \"\"\r\n    //     }])\r\n    // };\r\n\r\n    useEffect(() => {\r\n        setAdanTime(data)\r\n        const prayer = data.prayer\r\n        setInputList(prayer)\r\n        console.log(prayer)\r\n    })\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    // const handleClick = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    // console.log(data)\r\n\r\n    function updateChange(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        console.log(id)\r\n        updateJummah(id, adanTime).then(res => {\r\n            isAuthenticated(res.data.token, () => {\r\n                setAdanTime({\r\n                    englishDay: '',\r\n                    englishMonth: '',\r\n                    englishYear: \"\",\r\n                    arabDay: '',\r\n                    arabMonth: '',\r\n                    arabYear: \"\",\r\n                    prayer: [],\r\n                })\r\n            })\r\n            setOpen(true);\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    function deleteAdan(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        deleteJummah(id).then(res => {\r\n            isAuthenticated(res.data.token)\r\n            setOpen(true);\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Operation done successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Adan</Form.Label>\r\n                                    <Form.Control as=\"select\"\r\n                                                  defaultValue={x.label}\r\n                                                  name=\"label\" value={label} onChange={e => handleInputChange(e, i)}>\r\n                                        <option>Select Adan Name</option>\r\n                                        {\r\n                                            AdanData.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index} className=\"text-black\">{data.label}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Khutba Time</Form.Label>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{ width: 150 }}\r\n                                        name='khutba'\r\n                                        value={khutba}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        defaultValue={x.khutba}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/*<Form.Control type=\"option\" name=\"khutba\" placeholder={khutba}*/}\r\n                                {/*              defaultValue={x.khutba}*/}\r\n                                {/*              value={khutba} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Imam Name</Form.Label>\r\n                                    <Form.Control type=\"price\" name=\"imam\" placeholder=\"End time\"\r\n                                                  defaultValue={x.imam}\r\n                                                  value={imam} onChange={e => handleInputChange(e, i)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            {/*<Col className=\"mt-4\">*/}\r\n                            {/*    {inputList.length !== 1 && <Button*/}\r\n                            {/*        className=\"mr10\"*/}\r\n                            {/*        onClick={() => handleRemoveClick(i)}>Remove</Button>}*/}\r\n                            {/*    {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}*/}\r\n                            {/*</Col>*/}\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n                <div className='d-flex justify-content-around'>\r\n\r\n                    <div>\r\n                        <Button variant=\"outline-primary\" onClick={deleteAdan}>Delete</Button>\r\n                    </div>\r\n                    <di>\r\n                        <Button variant=\"outline-primary\" onClick={updateChange}>Update</Button>\r\n                    </di>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JummahDatas","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Card, Row, Col, Form, Modal} from \"react-bootstrap\";\r\nimport DayData from '../data/dayData.json'\r\nimport MonthData from \"../data/month.json\"\r\nimport YearData from \"../data/yearData.json\"\r\nimport AdanData from \"../data/adanData.json\"\r\nimport {isAuthenticated} from \"../utils/auth\";\r\nimport AddJummah from \"../components/Main/AddJummah\";\r\nimport {getOneJummah} from \"../Api/jummah\";\r\nimport {addAdans, getOneAdan} from \"../Api/AdanTime\";\r\nimport JummahDatas from \"../components/Main/JummaData\";\r\nimport \"./product.css\"\r\n\r\n\r\nconst JummahData = () => {\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        label: \"level\",\r\n        khutba: \"time\",\r\n        imam: \"time\"\r\n    }]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const {label, khutba, imam} = inputList;\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            prayer: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            level: \"level\",\r\n            startTime: \"time\",\r\n            endTime: \"time\"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function search() {\r\n\r\n        const id1 = englishDay\r\n        const id2 = englishMonth\r\n        const id3 = englishYear\r\n        if (id1, id2, id3) {\r\n            getOneJummah(id1, id2, id3).then(res => {\r\n\r\n                try {\r\n                    const allData = res.data[0]\r\n                    const prayer = allData.prayer[0]\r\n                    setAdanTime(allData)\r\n                    setInputList(prayer)\r\n                    console.log(adanTime)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" className=\"mb-4\" onClick={handleShow}>\r\n                Add Prayer\r\n            </Button>\r\n\r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Jummah And Eid Data</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddJummah/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Form\r\n                // onSubmit={handleSubmit}\r\n            >\r\n                <Form.Label className=\"text-center\">Update Adan</Form.Label>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"primary\" className=\"mb-4\" onClick={search}>\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n            <JummahDatas data={adanTime}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JummahData","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, } from \"react-bootstrap\";\r\nimport DayData from '../../data/dayData.json'\r\nimport MonthData from \"../../data/month.json\"\r\nimport YearData from \"../../data/yearData.json\"\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {addRamadan} from \"../../Api/Ramadan\";\r\nimport {Snackbar, Alert,TextField} from \"@mui/material\";\r\n\r\nconst AddRamadan = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        shehriIn: \"level\",\r\n        shehriOut:\"time\",\r\n        Iftar: \"name\"\r\n    }]);\r\n\r\n    const {shehriIn, shehriOut, Iftar} = inputList;\r\n\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            prayer: inputList\r\n        })\r\n    };\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {\r\n            shehriIn: \"level\",\r\n            shehriOut:\"time\",\r\n            Iftar: \"name\"\r\n        }])\r\n    };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        addRamadan({ englishDay, englishMonth, englishYear, prayer, shehriIn, shehriOut, Iftar})\r\n            .then(response => {\r\n                // setValues({\r\n                //     success: true,\r\n                // })\r\n                setOpen(true);\r\n                isAuthenticated(response.data.token, () => {\r\n                    setAdanTime({englishDay: '',\r\n                        englishMonth: '',\r\n                        englishYear: \"\",\r\n                        prayer: inputList,\r\n                        success: true,\r\n                        shehriIn: \"\",\r\n                        shehriOut:\"\",\r\n                        Iftar: \"\"\r\n                    })\r\n\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const addNewRamadan = () => (\r\n        <Container fluid>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    This is a success message!\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Sehri Start</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue=\"03:30\"\r\n                                            name='shehriIn'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={shehriIn}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"option\" name=\"shehriIn\" placeholder=\"Start time\"*/}\r\n                                    {/*              value={shehriIn} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col> <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                <Form.Label>Sehri End</Form.Label>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Pick time\"\r\n                                        type=\"time\"\r\n                                        defaultValue=\"03:30\"\r\n                                        name='shehriOut'\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            step: 60, // 5 min\r\n                                        }}\r\n                                        sx={{ width: 150 }}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        value={shehriOut}\r\n                                    />\r\n                                </div>\r\n                                {/*<Form.Control type=\"option\" name=\"shehriOut\" placeholder=\"Start time\"*/}\r\n                                {/*              value={shehriOut} onChange={e => handleInputChange(e, i)}/>*/}\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Iftar Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue=\"03:30\"\r\n                                            name='Iftar'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={Iftar}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"Name\" name=\"Iftar\" placeholder=\"End time\"*/}\r\n                                    {/*              value={Iftar} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Ramadan\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    )\r\n\r\n\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (\r\n\r\n            <>\r\n                <Alert variant='success'>\r\n                    Announcement successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewRamadan()}\r\n        </div>\r\n    )\r\n}\r\nexport default AddRamadan","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addRamadan = (addJummah) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/ramadan/`, addJummah, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const getOneRamadan = (id1, id2, id3) => {\r\n    console.log(id1)\r\n    return axios.get(\r\n        `${port}/ramadan/?englishMonth=${id2}&englishYear=${id3}&englishDay=${id1}`\r\n    );\r\n};\r\nexport const updateRamadan = (id, addAdan) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/ramadan/${id}`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const deleteRamadan= (id) => {\r\n    console.log(id)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/ramadan/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport DayData from \"../../data/dayData.json\";\r\nimport MonthData from \"../../data/month.json\";\r\nimport YearData from \"../../data/yearData.json\";\r\nimport {isAuthenticated} from \"../../utils/auth\";\r\nimport {deleteJummah, getOneJummah, updateJummah} from \"../../Api/jummah\";\r\nimport {deleteRamadan, updateRamadan} from \"../../Api/Ramadan\";\r\nimport {Alert, Snackbar, TextField} from \"@mui/material\";\r\n\r\nconst RamadanData = (allData) => {\r\n    const data = allData.data\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        arabDay: '',\r\n        arabMonth: '',\r\n        arabYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n    const [inputList, setInputList] = useState([{\r\n        shehriIn: \"level\",\r\n        shehriOut:\"time\",\r\n        Iftar: \"name\"\r\n    }]);\r\n\r\n    const {shehriIn, shehriOut, Iftar} = inputList;\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const {name, value} = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            timing: inputList\r\n        })\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setAdanTime(data)\r\n        const prayer = data.prayer\r\n        setInputList(prayer)\r\n        console.log(prayer)\r\n    })\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    // console.log(data)\r\n\r\n    function updateChange(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        console.log(id)\r\n        updateRamadan(id, adanTime).then(res => {\r\n            setOpen(true);\r\n            isAuthenticated(res.data.token, () => {\r\n                setAdanTime({\r\n                    englishDay: '',\r\n                    englishMonth: '',\r\n                    englishYear: \"\",\r\n                    arabDay: '',\r\n                    arabMonth: '',\r\n                    arabYear: \"\",\r\n                    prayer: [],\r\n                })\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    function deleteAdan(e) {\r\n        e.preventDefault();\r\n        const id = data._id\r\n        deleteRamadan(id).then(res => {\r\n            isAuthenticated(res.data.token)\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                    Operation done successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option>Select Day</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option>Select Month</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option>Select year</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Seheri Start Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue={x.shehriIn}\r\n                                            name='shehriIn'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={shehriIn}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"option\" name=\"shehriIn\" placeholder={shehriIn}*/}\r\n                                    {/*              defaultValue={x.shehriIn}*/}\r\n                                    {/*              value={shehriIn} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Seheri End Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue={x.shehriOut}\r\n                                            name='shehriOut'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={shehriOut}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"option\" name=\"shehriOut\" placeholder={shehriOut}*/}\r\n                                    {/*              defaultValue={x.shehriOut}*/}\r\n                                    {/*              value={shehriOut} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Iftar Time</Form.Label>\r\n                                    <div>\r\n                                        <TextField\r\n                                            label=\"Pick time\"\r\n                                            type=\"time\"\r\n                                            defaultValue={x.Iftar}\r\n                                            name='Iftar'\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            inputProps={{\r\n                                                step: 60, // 5 min\r\n                                            }}\r\n                                            sx={{ width: 150 }}\r\n                                            onChange={e => handleInputChange(e, i)}\r\n                                            value={Iftar}\r\n                                        />\r\n                                    </div>\r\n                                    {/*<Form.Control type=\"price\" name=\"Iftar\" placeholder=\"End time\"*/}\r\n                                    {/*              defaultValue={x.Iftar}*/}\r\n                                    {/*              value={Iftar} onChange={e => handleInputChange(e, i)}/>*/}\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n                <div className='d-flex justify-content-around'>\r\n\r\n                    <div>\r\n                        <Button variant=\"outline-primary\" onClick={deleteAdan}>Delete</Button>\r\n                    </div>\r\n                    <di>\r\n                        <Button variant=\"outline-primary\" onClick={updateChange}>Update</Button>\r\n                    </di>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RamadanData","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Card, Row, Col, Form, Modal} from \"react-bootstrap\";\r\nimport DayData from '../data/dayData.json'\r\nimport MonthData from \"../data/month.json\"\r\nimport YearData from \"../data/yearData.json\"\r\nimport AdanData from \"../data/adanData.json\"\r\nimport {addAdans} from \"../Api/AdanTime\";\r\nimport {isAuthenticated} from \"../utils/auth\";\r\nimport './product.css'\r\nimport {getOneJummah} from \"../Api/jummah\";\r\nimport AddJummah from \"../components/Main/AddJummah\";\r\nimport AddRamadan from \"../components/Main/addRamadan\";\r\nimport {getOneRamadan} from \"../Api/Ramadan\";\r\nimport RamadanData from \"../components/Main/RamadanData\";\r\n\r\n\r\nconst Ramadan = () => {\r\n    const [adanTime, setAdanTime] = useState({\r\n        englishDay: '',\r\n        englishMonth: '',\r\n        englishYear: \"\",\r\n        prayer: [],\r\n    })\r\n\r\n    const {\r\n        englishDay, englishMonth, englishYear, prayer\r\n    } = adanTime\r\n\r\n    const [inputList, setInputList] = useState([{\r\n        shehriIn: \"level\",\r\n        shehriOut:\"time\",\r\n        Iftar: \"name\"\r\n    }]);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const {shehriIn,shehriOut,Iftar} = inputList;\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    // const handleInputChange = (e, index) => {\r\n    //     const {name, value} = e.target;\r\n    //     const list = [...inputList];\r\n    //     list[index][name] = value;\r\n    //     setInputList(list);\r\n    //     setAdanTime({\r\n    //         ...adanTime,\r\n    //         prayer: inputList\r\n    //     })\r\n    // };\r\n    //\r\n    //\r\n    // const handleRemoveClick = index => {\r\n    //     const list = [...inputList];\r\n    //     list.splice(index, 1);\r\n    //     setInputList(list);\r\n    // };\r\n    //\r\n    // const handleAddClick = () => {\r\n    //     setInputList([...inputList, {\r\n    //         level: \"level\",\r\n    //         startTime: \"time\",\r\n    //         endTime: \"time\"\r\n    //     }])\r\n    // };\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function search() {\r\n\r\n        const id1 = englishDay\r\n        const id2 = englishMonth\r\n        const id3 = englishYear\r\n        console.log(id3)\r\n        if (id1, id2, id3) {\r\n            getOneRamadan(id1, id2, id3).then(res => {\r\n                console.log(\"data\")\r\n                try {\r\n                    const allData = res.data[0]\r\n                    const prayer = allData.prayer[0]\r\n                    setAdanTime(allData)\r\n                    setInputList(prayer)\r\n                    console.log(adanTime)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n    // console.log(adanTime)\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" className=\"mb-4\" onClick={handleShow}>\r\n                Add Ramadan\r\n            </Button>\r\n\r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Ramadan Data</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddRamadan/>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Form\r\n            >\r\n                <Form.Label className=\"text-center\">Update Ramadan</Form.Label>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Day</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishDay\" value={englishDay} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    DayData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Month</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishMonth\" value={englishMonth} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    MonthData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.day}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Add Year</Form.Label>\r\n                            <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                          name=\"englishYear\" value={englishYear} onChange={handleChange}>\r\n                                <option className=\"text-black\">Select</option>\r\n                                {\r\n                                    YearData.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} className=\"text-black\">{data.year}</option>\r\n                                            )\r\n                                        }\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button variant=\"primary\" className=\"mb-4\" onClick={search}>\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n            <RamadanData data={adanTime}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ramadan","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\nconst token = JSON.parse(localStorage.getItem('jwt'))\r\nexport const addAnnouncement = (addAdan) => {\r\n\r\n    return axios.post(`${port}/announcement/`, addAdan, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const findAllAnnouncement = () => {\r\n    return axios.get(`${port}/announcement/`)\r\n}\r\n\r\nexport const findOneAnnouncement = (id) => {\r\n    return axios.get(`${port}/announcement/${id}`)\r\n}\r\n\r\nexport const updateAnnouncement = (id, data) => {\r\n    return axios.put(`${port}/announcement/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateAnnouncementImage = (id, data) => {\r\n    return axios.put(`${port}/announcement/image/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteAnnouncement = (id) => {\r\n    return axios.delete(`${port}/announcement/${id}`,  {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\n\r\nexport const addEvent = ( formData) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/event/`, formData, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const findAllEvent = () => {\r\n    return axios.get(`${port}/event/`)\r\n}\r\nexport const findOneEvent = (id) => {\r\n    return axios.get(`${port}/event/${id}`)\r\n}\r\nexport const updateEvent = (id, data) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/event/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteEvent = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/event/${id}`,  {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Form, Row} from \"react-bootstrap\";\r\nimport {findOneAnnouncement, updateAnnouncement, updateAnnouncementImage} from \"../../Api/Announcement\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nconst AnnounceUpdate = (data) => {\r\n    const {register, handleSubmit} = useForm({shouldUseNativeValidation: true});\r\n    const id = data.data\r\n\r\n    const [defaultData, setDefaultData] = useState({})\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        findOneAnnouncement(id).then(res => {\r\n            setDefaultData(res.data)\r\n        })\r\n    }, [])\r\n\r\n    console.log(defaultData)\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            await updateAnnouncement(id, data).then((res) => {\r\n                if (res) {\r\n                    setSuccess(true)\r\n                } else {\r\n                    setSuccess(false)\r\n                }\r\n            })\r\n        } catch (err) {\r\n            setSuccess(false)\r\n        }\r\n\r\n    };\r\n\r\n    const [image, setImage] = useState({})\r\n    const {eventImage} = image\r\n    const formData = new FormData\r\n    function handleChange(e) {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        console.log(value)\r\n        setImage({\r\n            ...image,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    function uploadImage() {\r\n        console.log(image)\r\n        // formData.append('eventImage', [image])\r\n        updateAnnouncementImage(id, image).then(r => console.log(r.data))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        {success && (<Alert> Ok</Alert>)}\r\n                        {!success && (<Alert> Something went Wrong</Alert>)}\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Name</Form.Label>\r\n                                            <Form.Control type=\"name\"\r\n                                                          name=\"eventName\"\r\n                                                          placeholder='Announcement Name'\r\n                                                          value={defaultData.eventName}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Date</Form.Label>\r\n\r\n                                            <Form.Control type=\"dates\"\r\n                                                          name=\"eventImage\"\r\n                                                          placeholder='Announcement Date'\r\n                                                          defaultValue={defaultData.eventDate}\r\n                                                          {...register(\"eventImage \")}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Time</Form.Label>\r\n\r\n                                            <Form.Control type=\"option\"\r\n                                                          time=\"eventDate\"\r\n                                                          placeholder='Announcement Time'\r\n                                                          defaultValue={defaultData.eventTime}\r\n                                                          {...register(\"eventTime\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Body</Form.Label>\r\n                                            <Form.Control as=\"textarea\"\r\n                                                          type=\"option\"\r\n                                                          name=\"eventBody\"\r\n                                                          placeholder='Announcement Body'\r\n                                                          defaultValue={defaultData.eventBody}\r\n                                                          {...register(\"eventBody\")}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <div className=\"d-flex justify-content-around\">\r\n                                    <div>\r\n                                        <Button variant=\"outline-danger\" type='submit'>Update?</Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Form>\r\n                    <Card>\r\n                        <Row>\r\n                            <Col>\r\n                                <img src={`${defaultData.eventImage}`} alt='img'/>\r\n                            </Col>\r\n                            <Col>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Default file input example</Form.Label>\r\n                                        <Form.Control type=\"file\"\r\n                                                      name=\"image\"\r\n                                                      onChange={e=>handleChange(e)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Button onClick={uploadImage} className=\"mb-4\" variant=\"primary\">Upload\r\n                                        Photo</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default AnnounceUpdate\r\n","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Button, Card, Col, Form, Modal, Row, Table} from \"react-bootstrap\"\r\nimport DatePicker from \"react-datepicker\";\r\nimport {\r\n    deleteAnnouncement,\r\n    findAllAnnouncement,\r\n    findOneAnnouncement,\r\n    updateAnnouncement\r\n} from \"../../Api/Announcement\";\r\nimport AnnounceUpdate from \"./AnnounceUpdate\";\r\n\r\n\r\nconst AnnouncementData = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [events, setUser] = useState([]);\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, []);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await findAllAnnouncement()\r\n        setUser(result.data.reverse());\r\n    };\r\n\r\n    const deleteUser = async id => {\r\n        await deleteAnnouncement(id);\r\n        await loadUsers();\r\n    };\r\n    const [announcement, setAnnouncement] = useState()\r\n    const updateUser = async (id) => {\r\n        handleShow();\r\n        setAnnouncement(id)\r\n    }\r\n    console.log(announcement)\r\n    return (\r\n        <>\r\n            <div className=\"text-center font-bold\"> All Announcement</div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Announcement Name</th>\r\n                    <th>Announcement Date</th>\r\n                    <th>Announcement Time</th>\r\n                    <th>Announcement Description</th>\r\n                    <th>Image</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {events && events.map((data, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{data.eventName}</td>\r\n                            <td>{data.eventDate}</td>\r\n                            <td>{data.eventTime}</td>\r\n                            <td>{data.eventBody}</td>\r\n                            <td width=\"10%\"><img width=\"auto\" src={data.eventImage}/></td>\r\n                            <td>\r\n                                <Button className=\"mr-4\" variant=\"primary\" onClick={() => updateUser(data._id)}>\r\n                                    Edit\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteUser(data._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n            <div>\r\n            </div>\r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Announcement</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AnnounceUpdate data={announcement}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AnnouncementData\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Form, Row} from \"react-bootstrap\";\r\nimport {findOneEvent, updateEvent} from \"../../Api/Event\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst eventUpdate = (data) => {\r\n    const { register, handleSubmit } = useForm({ shouldUseNativeValidation: true });\r\n    const id = data.datas._id\r\n    console.log(data)\r\n\r\n    const [defaultData, setDefaultData] = useState({})\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n        findOneEvent(id).then(res => {\r\n            setDefaultData(res.data)\r\n            console.log(defaultData)\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append(\"eventIamge\", data.image[0]);\r\n            // console.log(data.image[0])\r\n            await updateEvent(id, data).then((res)=> {\r\n                if (res) {\r\n                    setSuccess(true)\r\n                }\r\n                else{\r\n                    setSuccess(false)\r\n                }\r\n            })\r\n        }catch (err){\r\n            setSuccess(false)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mt-4\">\r\n                <Col>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        {success && (<Alert > Ok</Alert>)}\r\n                        {!success && (<Alert > Something went Wrong</Alert>)}\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Name</Form.Label>\r\n                                            <Form.Control type=\"name\"\r\n                                                          name=\"eventName\"\r\n                                                          placeholder='Announcement Name'\r\n                                                          defaultValue={defaultData.eventName}\r\n                                                          {...register(\"eventName\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Date</Form.Label>\r\n\r\n                                            <Form.Control type=\"dates\"\r\n                                                          name=\"eventDate\"\r\n                                                          placeholder='Announcement Date'\r\n                                                          defaultValue={defaultData.eventDate}\r\n                                                          {...register(\"eventDate\")}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Time</Form.Label>\r\n\r\n                                            <Form.Control type=\"option\"\r\n                                                          time=\"eventDate\"\r\n                                                          placeholder='Announcement Time'\r\n                                                          defaultValue={defaultData.eventTime}\r\n                                                          {...register(\"eventTime\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Announcement Body</Form.Label>\r\n                                            <Form.Control as=\"textarea\"\r\n                                                          type=\"option\"\r\n                                                          name=\"eventBody\"\r\n                                                          placeholder='Announcement Body'\r\n                                                          defaultValue={defaultData.eventBody}\r\n                                                          {...register(\"eventBody\")}\r\n\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {/*<Form.Group controlId=\"formFile\" className=\"mb-3\">*/}\r\n                                        {/*    <Form.Label>Default file input example</Form.Label>*/}\r\n                                        {/*    <Form.Control type=\"file\"*/}\r\n                                        {/*                  name=\"image\"*/}\r\n                                        {/*                  {...register(\"image\")}*/}\r\n\r\n                                        {/*    />*/}\r\n                                        {/*</Form.Group>*/}\r\n                                    </Col>\r\n                                </Row>\r\n                                <div className=\"d-flex justify-content-around\">\r\n                                    <div>\r\n                                        <Button variant=\"outline-danger\" type='submit'>Update?</Button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default eventUpdate","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Modal, Table} from \"react-bootstrap\";\r\nimport { deleteEvent, findAllEvent} from \"../../Api/Event\";\r\nimport EventUpdate from \"./eventUpdate\";\r\n\r\n\r\n\r\nconst EventData = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [events, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, [events]);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await findAllEvent()\r\n        setUser(result.data.reverse());\r\n    };\r\n\r\n    const deleteUser = async id => {\r\n        await deleteEvent(id);\r\n        await loadUsers();\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"text-center font-bold\"> All Events</div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Event Name</th>\r\n                    <th>Event Date</th>\r\n                    <th>Event Time</th>\r\n                    <th>Event Description</th>\r\n                    <td>Image</td>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {events && events.map((data, index)=> {\r\n                    return(\r\n                        <tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td>{data.eventName}</td>\r\n                            <td>{data.eventDate}</td>\r\n                            <td>{data.eventTime}</td>\r\n                            <td>{data.eventBody}</td>\r\n                            <td width=\"10%\"><img width=\"auto\" src={data.eventImage}  alt=\"eventImage\"/></td>\r\n                            <td>\r\n                                <Button className=\"mr-4\" variant=\"primary\"  onClick={handleShow}>\r\n                                    Edit\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteUser(data._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Modal heading</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body><EventUpdate datas={data} /></Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                                        Close\r\n                                    </Button>\r\n                                    <Button variant=\"primary\" onClick={handleClose}>\r\n                                        Save Changes\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EventData\r\n","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const addBanners = (addBanner) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${port}/banner/`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\nexport const findAllBanner = () => {\r\n    return axios.get(`${port}/banner/`)\r\n}\r\n\r\nexport const findOneBanner = (id) => {\r\n    return axios.get(`${port}/banner/${id}`)\r\n}\r\n\r\nexport const updateBanner  = (id, data) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${port}/banner/${id}`, data, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteBanner = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${port}/banner/${id}`,  {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, { useEffect, useState} from \"react\";\r\nimport {deleteBanner, findAllBanner} from \"../../Api/Banner\";\r\nimport {Button, Modal, Table} from \"react-bootstrap\";\r\n\r\nconst BannerData = () => {\r\n    const [banners, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, [banners]);\r\n\r\n    const loadUsers = async () => {\r\n        const result = await findAllBanner()\r\n        setUser(result.data.reverse());\r\n    };\r\n    const deleteUser = async id => {\r\n        await deleteBanner(id);\r\n        await loadUsers();\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"text-center font-bold\"> All Banner</div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Banner Name</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {banners && banners.map((data, index)=> {\r\n                    return(\r\n                        <tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td ><img width=\"20%\" src={data.bannerImage} /></td>\r\n                            <td>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteUser(data._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BannerData\r\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\nimport UpdateDailyAdan from \"./views/UpdateDailyAdan\";\nimport JummahData from \"./views/JummahData\";\nimport Ramadan from \"./views/Ramadan\";\nimport Announcement from \"./views/Announcement\";\nimport Event from './views/event'\nimport Banner from \"./views/Banner\";\n\n\nconst dashboardRoutes = [\n  // {\n  //   upgrade: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"nc-icon nc-alien-33\",\n  //   component: Upgrade,\n  //   layout: \"/admin\",\n  // },\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/dailyAdan\",\n    name:\"Daily Adan\",\n    icon: \"nc-icon nc-circle-09\",\n    component: UpdateDailyAdan,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Jummah\",\n    name: \"Jummah & Others\",\n    icon: \"nc-icon nc-notes\",\n    component: JummahData,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/ramadan\",\n    name: \"Ramadan\",\n    icon: \"nc-icon nc-paper-2\",\n    component: Ramadan,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/announcement\",\n    name: \"Announcement\",\n    icon: \"nc-icon nc-atom\",\n    component: Announcement,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/event\",\n    name: \"Event\",\n    icon: \"nc-icon nc-pin-3\",\n    component: Event,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/banner\",\n    name: \"Banner\",\n    icon: \"nc-icon nc-bell-55\",\n    component: Banner,\n    layout: \"/admin\",\n  },\n];\n\nexport default dashboardRoutes;\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, Alert} from \"react-bootstrap\";\r\nimport {addAnnouncement} from \"../Api/Announcement\";\r\nimport {addEvent} from \"../Api/Event\";\r\nimport AnnouncementData from \"../components/Main/AnnouncementData\";\r\nimport {showSuccess} from \"../utils/message\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport announcementData from \"../components/Main/AnnouncementData\";\r\n\r\n\r\nconst Announcement = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        eventName: '',\r\n        eventBody: '',\r\n        eventDate: '',\r\n        eventTime:'',\r\n        formData: '',\r\n        image: '',\r\n        success: false\r\n    })\r\n\r\n    const {\r\n        eventName, eventBody,  eventDate, eventTime, formData\r\n    } = adanTime\r\n\r\n    useEffect(() => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setAdanTime({\r\n            ...adanTime\r\n        })\r\n\r\n        addAnnouncement(formData)\r\n            .then(response => {\r\n                setAdanTime({\r\n                    eventName: '',\r\n                    eventBody: '',\r\n                    eventDate: '',\r\n                    eventTime:'',\r\n                    formData: '',\r\n                    image: '',\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addAnnouncements = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Announcement name</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventName\" placeholder=\"End time\"\r\n                                          value={eventName} onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Announcement Date</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventDate\" placeholder=\"End time\"\r\n                                          value={eventDate} onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Announcement Time</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventTime\" placeholder=\"End time\"\r\n                                          value={eventTime}onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={eventBody} name=\"eventBody\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload Image</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Announcement\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n            <AnnouncementData/>\r\n        </Container>\r\n    )\r\n\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (<>\r\n                <Alert variant='success'>\r\n                   Announcement successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addAnnouncements()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Announcement\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, Col, Container, Form, Row, Dropdown, Alert} from \"react-bootstrap\";\r\nimport {isAuthenticated, userInfo} from \"../utils/auth\";\r\nimport {addEvent} from \"../Api/Event\";\r\nimport {addAdans} from \"../Api/AdanTime\";\r\nimport EventData from \"../components/Main/EventData\";\r\nimport {showSuccess} from \"../utils/message\";\r\n\r\n\r\nconst Event = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        eventName: '',\r\n        eventBody: '',\r\n        eventDate: '',\r\n        formData: '',\r\n        eventTime:'',\r\n        success: false\r\n    })\r\n\r\n    const {\r\n        eventName, eventBody,  eventDate, formData, eventTime\r\n    } = adanTime\r\n\r\n    useEffect(() => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setAdanTime({\r\n            ...adanTime\r\n        })\r\n\r\n        addEvent( formData)\r\n            .then(response => {\r\n                setAdanTime({\r\n                    eventName: '',\r\n                    eventBody: '',\r\n                    eventDate: '',\r\n                    eventTime: '',\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const addEvents = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Event name</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventName\" placeholder=\"End time\"\r\n                                          value={eventName} onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Event Date</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventDate\" placeholder=\"End time\"\r\n                                          value={eventDate}onChange={handleChange}/>\r\n                        </Form.Group>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                            <Form.Label>Event Time</Form.Label>\r\n                            <Form.Control type=\"price\" name=\"eventTime\" placeholder=\"End time\"\r\n                                          value={eventTime}onChange={handleChange}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={eventBody} name=\"eventBody\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Default file input example</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Event\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n            <div className='mt-4'>\r\n                <div className=\"text-center\">All Events</div>\r\n                <EventData />\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (<>\r\n                <Alert variant='success'>\r\n                    Event successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addEvents()}\r\n        </div>\r\n    )\r\n}\r\nexport default Event\r\n","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Alert, Button, Card, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {addBanners} from \"../Api/Banner\";\r\nimport BannerData from \"../components/Main/BannerData\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Banner = () => {\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n    })\r\n    const { success } = values;\r\n    const [adanTime, setAdanTime] = useState({\r\n        formData: '',\r\n    })\r\n\r\n    const {\r\n        formData\r\n    } = adanTime\r\n\r\n    useEffect(() => {\r\n        setAdanTime({\r\n            ...adanTime,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdanTime({\r\n            ...adanTime,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n    const history = useHistory();\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setAdanTime({\r\n            ...adanTime\r\n        })\r\n\r\n        addBanners( formData)\r\n            .then(response => {\r\n                setAdanTime({\r\n                    success: true\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                })\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const addNewBanner = () => (\r\n        <Container fluid>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Default file input example</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Add new Banner\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n            <BannerData/>\r\n        </Container>\r\n\r\n    )\r\n    console.log(adanTime)\r\n    const showSuccess = () => {\r\n        console.log(success)\r\n        if (success) return (<>\r\n                <Alert variant='success'>\r\n                    Banner successfully added\r\n                </Alert>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addNewBanner()}\r\n        </div>\r\n    )\r\n}\r\nexport default Banner","\nimport React, {Component} from \"react\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {Navbar, Container, Nav, Dropdown, Button} from \"react-bootstrap\";\n\nimport routes from \"routes.js\";\n\nfunction Header() {\n    const location = useLocation();\n    const mobileSidebarToggle = (e) => {\n        e.preventDefault();\n        document.documentElement.classList.toggle(\"nav-open\");\n        var node = document.createElement(\"div\");\n        node.id = \"bodyClick\";\n        node.onclick = function () {\n            this.parentElement.removeChild(this);\n            document.documentElement.classList.toggle(\"nav-open\");\n        };\n        document.body.appendChild(node);\n    };\n\n    const getBrandText = () => {\n        for (let i = 0; i < routes.length; i++) {\n            if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n                return routes[i].name;\n            }\n        }\n        return \"Brand\";\n    };\n\n    const logout = (e) => {\n        e.preventDefault()\n        localStorage.clear()\n    }\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container fluid>\n                <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\n                    <Button\n                        variant=\"dark\"\n                        className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\n                        onClick={mobileSidebarToggle}\n                    >\n                        <i className=\"fas fa-ellipsis-v\"></i>\n                    </Button>\n                    <Navbar.Brand\n                        href=\"#home\"\n                        onClick={(e) => e.preventDefault()}\n                        className=\"mr-2\"\n                    >\n                        {getBrandText()}\n                    </Navbar.Brand>\n                </div>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\n                    <span className=\"navbar-toggler-bar burger-lines\"></span>\n                    <span className=\"navbar-toggler-bar burger-lines\"></span>\n                    <span className=\"navbar-toggler-bar burger-lines\"></span>\n                </Navbar.Toggle>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"nav mr-auto\" navbar>\n\n\n\n                    </Nav>\n                    <Nav>\n\n                        <Nav.Item>\n                            <Nav.Link\n                                className=\"m-0\"\n                                onClick={(e) => logout(e)}\n\n                            >\n                                <Link  to=\"/login\" className=\"no-icon\">Log out</Link>\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer px-0 px-lg-3\">\n\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/reactlogo.55f6660b.png\";","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { useLocation, NavLink } from \"react-router-dom\";\n\nimport { Nav } from \"react-bootstrap\";\n\nimport logo from \"assets/img/reactlogo.png\";\n\nfunction Sidebar({ color, image, routes }) {\n  const location = useLocation();\n  const activeRoute = (routeName) => {\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  return (\n    <div className=\"sidebar\" data-image={image} data-color={color}>\n      <div\n        className=\"sidebar-background\"\n        style={{\n          backgroundImage: \"url(\" + image + \")\",\n        }}\n      />\n      <div className=\"sidebar-wrapper\">\n        <div className=\"logo d-flex align-items-center justify-content-start\">\n          <a\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\n            className=\"simple-text logo-mini mx-1\"\n          >\n            <div className=\"logo-img\">\n              <img\n                src={require(\"../../MDQ_Logo_Text_White.png\").default}\n                alt=\"...\"\n              />\n            </div>\n          </a>\n          <a className=\"simple-text\" href=\"#\">\n            Masjid Darul Quran\n          </a>\n        </div>\n        <Nav>\n          {routes.map((prop, key) => {\n            if (!prop.redirect)\n              return (\n                <li\n                  className={\n                    prop.upgrade\n                      ? \"active active-pro\"\n                      : activeRoute(prop.layout + prop.path)\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            return null;\n          })}\n        </Nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/sidebar-3.51e747b6.jpg\";","export default __webpack_public_path__ + \"static/media/sidebar-1.2ea74e53.jpg\";","export default __webpack_public_path__ + \"static/media/sidebar-2.00b17713.jpg\";","export default __webpack_public_path__ + \"static/media/sidebar-4.b7eb4d1b.jpg\";","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { useLocation, Route, Switch } from \"react-router-dom\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport sidebarImage from \"assets/img/sidebar-3.jpg\";\n\nfunction Admin() {\n  const [image, setImage] = React.useState(sidebarImage);\n  const [color, setColor] = React.useState(\"black\");\n  const [hasImage, setHasImage] = React.useState(true);\n  const location = useLocation();\n  const mainPanel = React.useRef(null);\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => <prop.component {...props} />}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainPanel.current.scrollTop = 0;\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      var element = document.getElementById(\"bodyClick\");\n      element.parentNode.removeChild(element);\n    }\n  }, [location]);\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Sidebar color={color} image={hasImage ? image : \"\"} routes={routes} />\n        <div className=\"main-panel\" ref={mainPanel}>\n          <AdminNavbar />\n          <div className=\"content\">\n            <Switch>{getRoutes(routes)}</Switch>\n          </div>\n          <Footer />\n        </div>\n      </div>\n      {/*<FixedPlugin*/}\n      {/*  hasImage={hasImage}*/}\n      {/*  setHasImage={() => setHasImage(!hasImage)}*/}\n      {/*  color={color}*/}\n      {/*  setColor={(color) => setColor(color)}*/}\n      {/*  image={image}*/}\n      {/*  setImage={(image) => setImage(image)}*/}\n      {/*/>*/}\n    </>\n  );\n}\n\nexport default Admin;\n","import {useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {login} from '../Api/auth'\r\nimport {authenticate} from '../utils/auth';\r\n\r\nimport './User.css';\r\nimport {Form} from \"react-bootstrap\";\r\n\r\n\r\nconst Login = () => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        success: false\r\n    });\r\n\r\n    const {email, password, success} = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({...values})\r\n        login({email, password})\r\n            .then(response => {\r\n                authenticate(response.data.token, () => {\r\n                    setValues({\r\n                        email: '',\r\n                        password: '',\r\n                        success: true,\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const LoginForm = () => (\r\n        <>\r\n            <div className=\"mx-auto\" data-v-791b20d9>\r\n                <div data-v-791b20d9>\r\n                    <section className=\"flex flex-col md:flex-row items-center md:justify-center py-10 md:py-6\" data-v-791b20d9>\r\n                        <div className=\"bg-white w-full md:w-[450px] px-6 lg:px-8 flex items-start py-12 justify-center relative flex-shrink\">\r\n                            <div className=\"w-full h-full\">\r\n                                <h1 className=\"text-xl md:text-2xl font-bold leading-tight\">\r\n                                    Log in to your account\r\n                                </h1>\r\n                                <Form onSubmit={handleSubmit} method=\"post\" class=\"mt-6\">\r\n                                    <div><label className=\"block text-gray-700\">Email Address</label>\r\n                                        <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter Email\" value={email} required onChange={handleChange} autofocus=\"autofocus\"\r\n                                               autoComplete={true}\r\n                                               className=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-4\"><label className=\"block text-gray-700\">Password</label> <input\r\n                                        type=\"password\" name=\"password\" className=\"form-control\" value={password} required onChange={handleChange} placeholder=\"Enter Password\" class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500\r\n            focus:bg-white focus:outline-none\"/></div>\r\n\r\n                                    <div className=\"text-right mt-2\"><a href=\"forgot-password.html\"\r\n                                                                        className=\"text-sm font-semibold text-gray-700 hover:text-primary-700 focus:text-primary-700\">Forgot\r\n                                        Password?</a></div>\r\n                                    <button onSubmit={handleSubmit} type=\"submit\" className=\"w-full block bg-primary-500 hover:bg-primary-400 focus:bg-primary-400 text-white font-semibold rounded-lg\r\n          px-4 py-3 mt-6\">\r\n                                        Log In\r\n                                    </button>\r\n\r\n                                </Form>\r\n                                <hr className=\"my-6 border-gray-300 w-full\"/>\r\n\r\n                                <p className=\"mt-5 text-center\">\r\n                                    Need an account?\r\n                                    <Link to='registration'\r\n                                          class=\"text-primary-500 hover:text-primary-700 font-semibold\">Create an\r\n                                        account</Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    const showSuccess = () =>\r\n    {\r\n        if (success) return (\r\n            <Redirect to='/admin'/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {LoginForm()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import axios from \"axios\";\r\nimport {port} from \"../utils/dataBasePort\";\r\n\r\nexport const login = (user) => {\r\n    return axios.post(`${port}/auth/login`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};\r\n\r\nexport const registration = (user) => {\r\n    console.log(user)\r\n    return axios.post(`${port}/auth/register`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {registration} from \"../Api/auth\";\r\nimport {authenticate} from \"../utils/auth\";\r\n\r\nfunction Copyright() {\r\n\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Registration() {\r\n    // let history = useNavigate();\r\n    const {register, handleSubmit, setError, formState: {errors}} = useForm();\r\n\r\n    const onSubmit = data => {\r\n        if (data.password === data.rePassword) {\r\n            const registerData = {\r\n                fullName: data.fullName,\r\n                email: data.email,\r\n                // phoneNumber: data.number,\r\n                password: data.password\r\n            }\r\n            console.log(registerData)\r\n            registration(registerData).then(res => {\r\n                authenticate(res.data.token, () => {\r\n                    history({\r\n                        pathname: '/home'\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            setError(\"re_password\", {\r\n                type: \"server\",\r\n                message: \"Passwords do not match\",\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Registration\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"fullName\"\r\n                            label=\"Full Name\"\r\n                            name=\"fullName\"\r\n                            autoComplete=\"fullName\"\r\n                            autoFocus\r\n                            {...register(\"fullName\", {required: \"Full Name is required\"})}\r\n                            error={Boolean(errors.fullName)}\r\n                            helperText={errors.fullName?.message}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            {...register(\"email\", {required: \"Email is required\"})}\r\n                            error={Boolean(errors.email)}\r\n                            helperText={errors.email?.message}\r\n                        />\r\n                        {/*<TextField*/}\r\n                        {/*    margin=\"normal\"*/}\r\n                        {/*    fullWidth*/}\r\n                        {/*    id=\"number\"*/}\r\n                        {/*    label=\"Phone Number\"*/}\r\n                        {/*    name=\"number\"*/}\r\n                        {/*    autoComplete=\"number\"*/}\r\n                        {/*    {...register(\"number\", {required: \"PhoneNumber is required\"})}*/}\r\n                        {/*    error={Boolean(errors.number)}*/}\r\n                        {/*    helperText={errors.number?.message}*/}\r\n                        {/*/>*/}\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            {...register(\"password\", {required: \"Password is required\"})}\r\n                            error={Boolean(errors.password)}\r\n                            helperText={errors.password?.message}\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            name=\"rePassword\"\r\n                            label=\"Re-enter Password\"\r\n                            type=\"Password\"\r\n                            id=\"rePassword\"\r\n                            autoComplete=\"current-password\"\r\n                            {...register(\"rePassword\", {required: \"Re-Enter Password is required\"})}\r\n                            error={Boolean(errors.rePassword)}\r\n                            helperText={errors.rePassword?.message}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                            onClick={handleSubmit(onSubmit)}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link to=\"/\" href='/' variant=\"body2\">\r\n                                    {\"Already have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 8, mb: 4}}/>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import RegistrationForm from './RegistrationForm';\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <>\r\n            <RegistrationForm/>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Registration;","import {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport AdminLayout from \"./layouts/Admin\";\r\nimport React from \"react\";\r\nimport {AuthProvider} from \"./utils/auth\";\r\nimport Login from \"./views/Login\";\r\nimport {updateAdan} from \"./components/Main/updateAdan\";\r\nimport Registration from \"./layouts/Registration\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />}/>\r\n                <Route path='/' component={Login}/>\r\n                {/*<Route path='/register' component={Registration}/>*/}\r\n            </Switch>\r\n        </AuthProvider>\r\n    )\r\n}\r\nexport default App","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}